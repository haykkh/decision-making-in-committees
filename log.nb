(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    141530,       3302]
NotebookOptionsPosition[    136476,       3150]
NotebookOutlinePosition[    136943,       3168]
CellTagsIndexPosition[    136900,       3165]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["PHAS2443 Mini-project\n", "Subchapter"],
 "Decision-making in Committees\n\n",
 StyleBox["Hayk Khachatryan - 15013904\n\n", "Section"]
}], "Chapter",
 CellChangeTimes->{{3.728474051477929*^9, 3.728474069636891*^9}, {
  3.728474153494108*^9, 3.7284742288267517`*^9}, {3.7284748472839127`*^9, 
  3.728474847417631*^9}},ExpressionUUID->"4004ea0b-fefa-405d-bfc9-\
3caa3dc9998c"],

Cell[CellGroupData[{

Cell["24/02/2018", "Section",
 CellChangeTimes->{{3.728479231474869*^9, 
  3.7284792428400917`*^9}},ExpressionUUID->"065599b1-98c9-4c7b-83e5-\
a8a07b7fbe48"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<<", "IGraphM`"}]], "Input",
 CellChangeTimes->{{3.7289098751253653`*^9, 3.728909877855917*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"IGraph/M 0.3.97.2 (February 5, 2018)\"\>"], "Print",
 CellChangeTimes->{3.728909910921124*^9}],

Cell[BoxData["\<\"Evaluate IGDocumentation[] to get started.\"\>"], "Print",
 CellChangeTimes->{3.728909910929565*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "modeler", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"modeler", "[", 
    RowBox[{"N_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"k_", ",", " ", 
       RowBox[{"{", 
        RowBox[{"h0_", ",", " ", "h1_"}], "}"}], ",", " ", "e_"}], "}"}]}], 
    "]"}], " ", ":=", " ", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Implementation", " ", "of", " ", 
       RowBox[{"Parkinson", "'"}], "s", " ", "Law", "  ", "for", " ", 
       "decision"}], "-", 
      RowBox[{"making", " ", "in", " ", "committees"}]}], ";", 
     "\[IndentingNewLine]", "\t", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"inputs", ":"}], "\[IndentingNewLine]", ";", "\t", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"N", ":", " ", 
      RowBox[{"committee", " ", "size", " ", 
       RowBox[{"(", 
        RowBox[{"N", " ", "\[Element]", " ", "\[DoubleStruckCapitalN]"}], 
        ")"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"k", ",", " ", "h", ",", " ", "e"}], "}"}], ":", " ", 
      RowBox[{"model", " ", "parameters"}]}], ";", "\[IndentingNewLine]", 
     "\t\t\t", 
     RowBox[{"k", ":", " ", 
      RowBox[{"connectivity", " ", 
       RowBox[{"(", 
        RowBox[{
        "number", " ", "of", " ", "undirected", " ", "links", " ", "between", 
         " ", "nodes"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"k", " ", "\[Element]", " ", "\[DoubleStruckCapitalN]"}], 
        ")"}]}]}], ";", "\[IndentingNewLine]", "\t\t\t", 
     RowBox[{"h", ":", " ", 
      RowBox[{"threshold", " ", 
       RowBox[{"(", 
        RowBox[{"h", " ", "\[Element]", " ", 
         RowBox[{"[", 
          RowBox[{"0.5", ",", " ", "1"}], "]"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", "\t\t\t", 
     RowBox[{"e", ":", " ", 
      RowBox[{"rewiring", " ", "probability", " ", 
       RowBox[{"(", 
        RowBox[{"e", " ", "\[Element]", " ", 
         RowBox[{"[", 
          RowBox[{"0", ",", " ", "1"}], "]"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"outputs", ":"}], "\[IndentingNewLine]", ";", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"graph", " ", "probs"}]}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "}"}], ","}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"modeler", "::", "usage"}], " ", "=", " ", 
  "\"\<D[N, {k, h, e}] gives the expectation value of a final state without \
consensus and measures the groups proneness to end up in dispute\>\"", 
  " "}]}], "Input",
 CellChangeTimes->{{3.728474861491702*^9, 3.728474904648768*^9}, {
   3.7284749559125853`*^9, 3.728474968542129*^9}, {3.7284750120156097`*^9, 
   3.728475090949731*^9}, {3.728475136662575*^9, 3.728475205114554*^9}, {
   3.728475346144229*^9, 3.7284754655881987`*^9}, {3.728475548171199*^9, 
   3.728475561241664*^9}, {3.728475738768345*^9, 3.728475757349862*^9}, {
   3.728478460386495*^9, 3.728478559291864*^9}, {3.728478601193221*^9, 
   3.728478610832402*^9}, {3.728478643951866*^9, 3.72847866350782*^9}, {
   3.728478704372123*^9, 3.728478879152967*^9}, {3.728479825035219*^9, 
   3.728479833623762*^9}, {3.728479872327693*^9, 3.7284799353832207`*^9}, {
   3.7284799662639914`*^9, 3.728479977189024*^9}, {3.728480058539133*^9, 
   3.728480060122366*^9}, {3.728480349621873*^9, 3.7284804342096033`*^9}, 
   3.728481267454783*^9, {3.7284813365529118`*^9, 3.7284814142456007`*^9}, {
   3.728549970912529*^9, 
   3.728549979876594*^9}},ExpressionUUID->"575aa2ca-3107-4ebf-9739-\
95cc7c525828"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dissensus", "[", 
   RowBox[{"n_", ",", " ", "sf_", ",", " ", "si_"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"HeavisideTheta", "[", 
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{"Max", "[", 
      RowBox[{"sf", ",", " ", 
       RowBox[{"n", "-", "sf"}]}], "]"}], "n"]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.728478912959299*^9, 3.728479006611765*^9}, {
   3.728479039716363*^9, 3.728479043154997*^9}, {3.728479150163844*^9, 
   3.728479156426762*^9}, 
   3.728638906886002*^9},ExpressionUUID->"3eda7626-7a66-4140-92bc-\
6ba53d83fc90"],

Cell[BoxData[
 RowBox[{"dissensus", "[", 
  RowBox[{"15", ",", "3", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.728479045747768*^9, 
  3.728479118218527*^9}},ExpressionUUID->"bf676731-eeba-43f0-be22-\
8bfd8e8c5509"],

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"1", " ", "\[UndirectedEdge]", " ", "2"}], ",", " ", 
    RowBox[{"2", "\[UndirectedEdge]", " ", "3"}], ",", " ", 
    RowBox[{"2", "\[UndirectedEdge]", " ", "4"}], ",", " ", 
    RowBox[{"1", "\[UndirectedEdge]", " ", "4"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.728475892987454*^9, 
  3.728475980645413*^9}},ExpressionUUID->"cad0484e-8456-442a-b28f-\
f57b683b8ea2"],

Cell[CellGroupData[{

Cell["Need to implement the majority update func", "Subsection",
 CellChangeTimes->{{3.728550002467099*^9, 
  3.72855003717426*^9}},ExpressionUUID->"d285bc7e-7cc3-49ac-9828-\
e345fa48004d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "majority", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"majority", "[", 
    RowBox[{"h_", ",", "list_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{
     "Returns", " ", "1", " ", "if", " ", "a", " ", "majority", " ", "above", 
      " ", "the", " ", 
      RowBox[{"threshold", " ", "'"}], 
      RowBox[{"h", "'"}], " ", "is", " ", "reached"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
     "Returns", " ", "0", " ", "if", " ", "no", " ", "majority", " ", "above",
       " ", "the", " ", 
      RowBox[{"threshold", " ", "'"}], 
      RowBox[{"h", "'"}], " ", "is", " ", "reached"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", "inputs", ";", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"h", ":", " ", "threshold"}], ";", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"list", ":", " ", 
      RowBox[{
      "list", " ", "of", " ", "elements", " ", "to", " ", "check"}]}]}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"BooleanConvert", "[", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "converts", " ", "from", " ", "a", " ", "functional", " ", "form", " ",
         "to", " ", "disjunctive", " ", "normal", " ", "form"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"BooleanCountingFunction", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"compares", " ", "elements", " ", "in", " ", "list", " ", 
          RowBox[{"(", 
           RowBox[{"element1", " ", "\[And]", " ", "element2"}], ")"}], " ", 
          "and", " ", "returns", " ", "True", " ", "if", " ", "at", " ", 
          "least", " ", "a", " ", "majority", " ", "above", " ", "the", " ", 
          "threshold", " ", "h", " ", "are", " ", "agree"}], "  ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"IntegerPart", "[", 
            RowBox[{"h", " ", 
             RowBox[{"Length", "[", "list", "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Length", "[", "list", "]"}]}], "\[IndentingNewLine]", 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Length", "[", "list", "]"}]}], "\[IndentingNewLine]", "]"}],
        " ", "@@", " ", "list"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"BooleanConvert", "[", 
  RowBox[{"majority", "[", 
   RowBox[{"0.6", ",", " ", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.728638966565448*^9, 3.728639150791361*^9}, {
  3.728639186145172*^9, 3.728639212782338*^9}, {3.7286392686448812`*^9, 
  3.72863927533076*^9}, {3.728639434830126*^9, 
  3.728639437904134*^9}},ExpressionUUID->"092baabe-13e1-43c4-94c2-\
7608cf719274"],

Cell[CellGroupData[{

Cell["\<\

Majority fails to return True for a majority of state 0. This is because \
BooleanCountingFunction creates a logical statement comparing the elements in \
the list to each other to see if they\[CloseCurlyQuote]re the same. For a \
list { a, b, c, d } with h = 0.75, it checks \
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.7285500740882807`*^9, 3.728550303254901*^9}, 
   3.7286397545184774`*^9},ExpressionUUID->"c7f05dd6-1396-433f-a1bf-\
66fe1d18adfd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", " ", 
   RowBox[{"a", " ", "\[And]", " ", "b", " ", "\[And]", " ", "c"}], ")"}], 
  " ", "\[Or]", " ", 
  RowBox[{"(", " ", 
   RowBox[{"a", " ", "\[And]", " ", "b", " ", "\[And]", " ", "d"}], " ", 
   ")"}], " ", "\[Or]", " ", 
  RowBox[{"(", " ", 
   RowBox[{"b", " ", "\[And]", " ", "c", " ", "\[And]", " ", "d"}], " ", 
   ")"}], " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.728550307828236*^9, 3.7285503078313723`*^9}, {
   3.728564677662612*^9, 3.728564703733691*^9}, 
   3.7286397545184774`*^9},ExpressionUUID->"cdb2a84a-38c3-42cf-916a-\
4a5841de1814"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

While this works when the majority has a state of 1, it fails to work when \
the majority has a state of 0 (as 0 \[And] 0 \[And] 0 = 0)\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7285503250699873`*^9, 3.728550377973091*^9}, {
   3.728550502746735*^9, 3.728550553046111*^9}, 
   3.7286397505854535`*^9},ExpressionUUID->"620c5f6a-4db1-4c59-b16b-\
91524ada14e5"],

Cell[BoxData[{
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{"a", " ", "\[And]", " ", "b", " ", "\[And]", " ", "c"}], ")"}], 
    " ", "\[Or]", " ", 
    RowBox[{"(", " ", 
     RowBox[{"a", " ", "\[And]", " ", "b", " ", "\[And]", " ", "d"}], " ", 
     ")"}], " ", "\[Or]", " ", 
    RowBox[{"(", " ", 
     RowBox[{"b", " ", "\[And]", " ", "c", " ", "\[And]", " ", "d"}], " ", 
     ")"}]}], " ", "/.", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", " ", "\[Rule]", " ", "1"}], ",", " ", 
     RowBox[{"b", " ", "\[Rule]", " ", "1"}], ",", " ", 
     RowBox[{"c", "\[Rule]", " ", "1"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "0"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{"a", " ", "\[And]", " ", "b", " ", "\[And]", " ", "c"}], ")"}], 
    " ", "\[Or]", " ", 
    RowBox[{"(", " ", 
     RowBox[{"a", " ", "\[And]", " ", "b", " ", "\[And]", " ", "d"}], " ", 
     ")"}], " ", "\[Or]", " ", 
    RowBox[{"(", " ", 
     RowBox[{"b", " ", "\[And]", " ", "c", " ", "\[And]", " ", "d"}], " ", 
     ")"}]}], " ", "/.", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", " ", "\[Rule]", " ", "1"}], ",", " ", 
     RowBox[{"b", " ", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"c", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "0"}]}], "}"}]}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.728550389920021*^9, 3.728550464892593*^9}, {
   3.72855051371045*^9, 3.728550550959115*^9}, {3.728564708727316*^9, 
   3.728564715110812*^9}, {3.728564774712738*^9, 3.728564788987393*^9}, 
   3.7286397505854535`*^9},ExpressionUUID->"4af50273-17dd-48f5-9598-\
9c2dcc749b0b"]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.728550468770886*^9, 3.728550496803001*^9}, {
  3.728550555003585*^9, 3.728550620634893*^9}, {3.728550896615912*^9, 
  3.728550897403275*^9}},ExpressionUUID->"032f39bc-a45b-411d-b69a-\
298093de8ef8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "swaps", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"swaps", "[", 
   RowBox[{"h_", ",", " ", "list_", ",", " ", "0"}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"majority", "[", 
     RowBox[{"h", ",", "list"}], "]"}], ",", "1", ",", "0"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"swaps", "[", 
   RowBox[{"h_", ",", "list_", ",", " ", "1"}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"majority", "[", 
     RowBox[{"h", ",", "list"}], "]"}], ",", " ", "0", ",", " ", "1"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"swaps", "[", 
   RowBox[{"h_", ",", " ", "list_", ",", " ", "e"}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"majority", "[", 
     RowBox[{"h", ",", "list"}], "]"}], ",", "1", ",", "0"}], 
   "]"}]}]}], "Input",ExpressionUUID->"3d0a23e7-c870-4ef3-96fb-8ea7a494d0fd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["25/02/2018", "Section",
 CellChangeTimes->{{3.7285500458278008`*^9, 
  3.7285500486762543`*^9}},ExpressionUUID->"7c227c32-5ce8-4f93-a0b4-\
522606e93471"],

Cell[CellGroupData[{

Cell["\<\
Working on a majority function that takes into account  0 \[And] 0 = 0\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.728550935924861*^9, 3.728550957386758*^9}, 
   3.7286397419379373`*^9},ExpressionUUID->"8de0b778-ab4d-4afe-bf4e-\
781bed415333"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "majority", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"majority", "[", 
    RowBox[{"h_", ",", "list_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{
     "Returns", " ", "1", " ", "if", " ", "a", " ", "majority", " ", "above", 
      " ", "the", " ", 
      RowBox[{"threshold", " ", "'"}], 
      RowBox[{"h", "'"}], " ", "is", " ", "reached"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
     "Returns", " ", "0", " ", "if", " ", "no", " ", "majority", " ", "above",
       " ", "the", " ", 
      RowBox[{"threshold", " ", "'"}], 
      RowBox[{"h", "'"}], " ", "is", " ", "reached"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", "inputs", ";", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"h", ":", " ", "threshold"}], ";", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"list", ":", " ", 
      RowBox[{
      "list", " ", "of", " ", "elements", " ", "to", " ", "check"}]}]}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"BooleanConvert", "[", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "converts", " ", "from", " ", "a", " ", "functional", " ", "form", " ",
         "to", " ", "disjunctive", " ", "normal", " ", "form"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"BooleanCountingFunction", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"compares", " ", "elements", " ", "in", " ", "list", " ", 
          RowBox[{"(", 
           RowBox[{"element1", " ", "\[And]", " ", "element2"}], ")"}], " ", 
          "and", " ", "returns", " ", "True", " ", "if", " ", "at", " ", 
          "least", " ", "a", " ", "majority", " ", "above", " ", "the", " ", 
          "threshold", " ", "h", " ", "agree"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"IntegerPart", "[", 
            RowBox[{"h", " ", 
             RowBox[{"Length", "[", "list", "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Length", "[", "list", "]"}]}], "\[IndentingNewLine]", 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Length", "[", "list", "]"}]}], "\[IndentingNewLine]", "]"}],
        " ", "@@", " ", "list"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"BooleanConvert", "[", 
  RowBox[{"majority", "[", 
   RowBox[{"0.6", ",", " ", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}]}], "]"}], 
  "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.728550988028804*^9, 3.728551036599641*^9}, {
   3.728564590203421*^9, 3.728564595152996*^9}, {3.728564868178821*^9, 
   3.728564893376235*^9}, {3.7286392939099503`*^9, 3.728639310543289*^9}, {
   3.72863940018521*^9, 3.728639427711649*^9}, 
   3.7286397419379373`*^9},ExpressionUUID->"6c18d911-4592-414a-a6e4-\
6ce71e7b0a56"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

Idea: pass dummy list to BooleanCountingFunction (to get disjunctive form) \
then swap the elements in the dummy list with our list\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.728637506142541*^9, 3.7286375796628647`*^9}, 
   3.728639736669589*^9},ExpressionUUID->"065b1d4a-6c32-4847-a71e-\
d1f7737ab2b0"],

Cell[BoxData[{
 RowBox[{"h", " ", "=", " ", "0.6"}], "\[IndentingNewLine]", 
 RowBox[{"list", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
   "False", ",", " ", "False", ",", " ", "False", ",", " ", "False", ",", " ",
     "True"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"l", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ab", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fdsa", " ", "=", " ", 
   RowBox[{"BooleanConvert", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"BooleanCountingFunction", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"IntegerPart", "[", 
          RowBox[{"h", " ", 
           RowBox[{"Length", "[", "list", "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Length", "[", "list", "]"}]}], "\[IndentingNewLine]", "}"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"Length", "[", "list", "]"}]}], "\[IndentingNewLine]", "]"}], 
     " ", "@@", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"bdd", " ", "i"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", 
         RowBox[{"Length", "[", "l", "]"}]}], "}"}]}], "]"}]}], " ", "]"}]}], 
  " ", "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"then", " ", "swap", " ", "the", " ", 
    RowBox[{"bdd", "'"}], "s", " ", "back", " ", "with", " ", "rules"}], " ", 
   "*)"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.728565682963141*^9, 3.72856582847145*^9}, {
   3.72856586591427*^9, 3.728565918256414*^9}, {3.728566197212689*^9, 
   3.728566213625464*^9}, {3.728566250009371*^9, 3.728566269382115*^9}, {
   3.728566369743507*^9, 3.72856644156256*^9}, {3.7285665349063272`*^9, 
   3.728566586885811*^9}, {3.7285666214566603`*^9, 3.728566661084239*^9}, {
   3.728566793778327*^9, 3.728566813422222*^9}, {3.728566942190843*^9, 
   3.728566958635467*^9}, 
   3.728639736669589*^9},ExpressionUUID->"3517aa47-d5c2-4ec3-a540-\
3f8a8245cf2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

Small break from figuring out majority, playing around with cellular automata\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7286376110457687`*^9, 3.728637624648054*^9}, 
   3.7286397173000717`*^9},ExpressionUUID->"f27b6f14-89ea-4596-b745-\
11d5b9879517"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "up", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"up", "[", 
    RowBox[{"lst_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"BooleanConvert", "[", 
    RowBox[{"majority", "[", 
     RowBox[{"0.8", ",", "lst"}], "]"}], "]"}]}], "\n", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
        "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", 
         "1", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"nsteps", "=", "10"}], ",", "\[IndentingNewLine]", 
      RowBox[{"r", "=", "2"}]}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"res", "=", 
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"up", ",", 
         RowBox[{"{", "}"}], ",", "r"}], "}"}], ",", "init", ",", "nsteps"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MatrixForm", "[", "res", "]"}], " ", "//.", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0", " ", "\[Rule]", " ", "False"}], ",", " ", 
      RowBox[{"1", "\[Rule]", " ", "True"}]}], "}"}]}], " ", "//.", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"False", " ", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"True", " ", "\[Rule]", " ", "1"}]}], "}"}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"ArrayPlot", "[", "res", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7285528901141644`*^9, 3.7285528931841183`*^9}, {
   3.728552956758617*^9, 3.7285530817202578`*^9}, {3.728553153511194*^9, 
   3.728553165347102*^9}, {3.7285532839675198`*^9, 3.728553429990388*^9}, {
   3.728564138921261*^9, 3.728564147542577*^9}, {3.728564181586602*^9, 
   3.728564238597146*^9}, {3.728564377727556*^9, 3.728564425888908*^9}, {
   3.728564567785338*^9, 3.728564571197598*^9}, {3.7286395220377493`*^9, 
   3.728639529595748*^9}, 3.7286397173000717`*^9, {3.7287311949110327`*^9, 
   3.728731199782334*^9}},ExpressionUUID->"981f3f2c-a359-4d80-89f6-\
affb1ea233ba"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["26/02/2018", "Section",
 CellChangeTimes->{{3.7286374829566135`*^9, 
  3.7286374886170816`*^9}},ExpressionUUID->"95a44111-6242-4521-98fb-\
e750b9527f95"],

Cell[CellGroupData[{

Cell["Finish implementing dummy list", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.728637636541464*^9, 3.7286376419086676`*^9}, {
   3.7286395959894333`*^9, 3.7286396017801228`*^9}, 3.7286397652241488`*^9, {
   3.7286398017620673`*^9, 
   3.728639819157379*^9}},ExpressionUUID->"a84dc503-d60e-466e-a724-\
8a469c1748d6"],

Cell[BoxData[{
 RowBox[{"h", " ", "=", " ", "0.6"}], "\[IndentingNewLine]", 
 RowBox[{"list", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
   "False", ",", " ", "False", ",", " ", "False", ",", " ", "False", ",", " ",
     "True"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"l", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"abList", " ", "=", "  ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"bdd", " ", "i"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"Length", "[", "l", "]"}]}], "}"}]}], "]"}]}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fdsa", " ", "=", " ", 
   RowBox[{"BooleanConvert", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"BooleanCountingFunction", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"IntegerPart", "[", 
          RowBox[{"h", " ", 
           RowBox[{"Length", "[", "list", "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Length", "[", "list", "]"}]}], "\[IndentingNewLine]", "}"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"Length", "[", "list", "]"}]}], "\[IndentingNewLine]", "]"}], 
     " ", "@@", " ", "abList"}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fdsa", " ", "//.", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"abList", "[", 
       RowBox[{"[", "i", "]"}], "]"}], " ", "\[Rule]", " ", 
      RowBox[{"l", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"Length", "[", "l", "]"}]}], "}"}]}], "]"}]}], " ", "//.", " ", 
  RowBox[{"{", 
   RowBox[{"And", " ", "\[Rule]", " ", "Equal"}], "}"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.728565682963141*^9, 3.72856582847145*^9}, {
   3.72856586591427*^9, 3.728565918256414*^9}, {3.728566197212689*^9, 
   3.728566213625464*^9}, {3.728566250009371*^9, 3.728566269382115*^9}, {
   3.728566369743507*^9, 3.72856644156256*^9}, {3.7285665349063272`*^9, 
   3.728566586885811*^9}, {3.7285666214566603`*^9, 3.728566661084239*^9}, {
   3.728566793778327*^9, 3.728566813422222*^9}, {3.728566942190843*^9, 
   3.728566958635467*^9}, {3.72863725828622*^9, 3.7286374050878334`*^9}, {
   3.728638587744836*^9, 3.7286385904072313`*^9}, 
   3.7286397652241488`*^9},ExpressionUUID->"d06cdcc7-ebbc-4e09-bfed-\
aa1580eda444"]
}, Open  ]],

Cell["\<\

Success! Now to implement it into majority[h, list]\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.7286385945741186`*^9, 3.728638602772705*^9}, {
  3.7286397689357204`*^9, 3.7286397938695526`*^9}, {3.728639839252901*^9, 
  3.728639847248361*^9}},ExpressionUUID->"c1561ec5-42e5-4708-977b-\
1897a8a9ecd0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"majority", ",", " ", "stringer"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stringer", "[", "i_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"ToString", "[", "ab", "]"}], "<>", 
    RowBox[{"ToString", "[", "i", "]"}]}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "creates", " ", "a", " ", "value", " ", "\"\<abi\>\"", " ", "for", " ", 
    "dummy", " ", "variables", " ", "in", " ", "majority"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"majority", "[", " ", 
    RowBox[{"h_", ",", " ", "list_"}], "]"}], ":=", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{
     "Returns", " ", "True", " ", "if", " ", "a", " ", "majority", " ", 
      "above", " ", "the", " ", 
      RowBox[{"threshold", " ", "'"}], 
      RowBox[{"h", "'"}], " ", "is", " ", "reached", " ", "in", " ", "list"}],
      ";", "\[IndentingNewLine]", "\t", 
     RowBox[{
     "Returns", " ", "False", " ", "if", " ", "no", " ", "majority", " ", 
      "above", " ", "the", " ", 
      RowBox[{"threshold", " ", "'"}], 
      RowBox[{"h", "'"}], " ", "is", " ", "reached", " ", "in", " ", "list"}],
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", "inputs", ";", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"h", ":", " ", "threshold"}], ";", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"list", ":", " ", 
      RowBox[{
      "list", " ", "of", " ", "elements", " ", "to", " ", "check"}]}]}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"ab", ",", " ", "swaps"}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ab", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"stringer", "[", "i", "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", " ", 
           RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}]}], ";", 
      "  ", 
      RowBox[{"(*", " ", 
       RowBox[{"dummy", " ", "list", " ", "of", " ", 
        RowBox[{"{", 
         RowBox[{
         "ab1", ",", " ", "ab2", ",", " ", "ab3", ",", " ", "...", ",", " ", 
          "abN"}], "}"}], " ", "where", " ", "N", " ", "is", " ", "the", " ", 
        "length", " ", "of", " ", "list"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"swaps", " ", "=", "  ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ab", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "\[Rule]", " ", 
          RowBox[{"list", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", " ", 
           RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "creates", " ", "a", " ", "list", " ", "of", " ", "transformations", 
        " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ab1", " ", "\[Rule]", " ", 
           RowBox[{"list", "[", "1", "]"}]}], ",", " ", 
          RowBox[{"ab2", " ", "\[Rule]", " ", 
           RowBox[{"list", "[", "2", "]"}]}], ",", " ", "...", ",", " ", 
          RowBox[{"abN", " ", "\[Rule]", " ", 
           RowBox[{"list", "[", "N", "]"}]}]}], "}"}], " ", "to", " ", "swap",
         " ", "back", " ", "after", " ", "BooleanCountingFunction"}], " ", 
       "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"BooleanConvert", "[", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "converts", " ", "from", " ", "a", " ", "functional", " ", "form", 
           " ", "to", " ", "disjunctive", " ", "normal", " ", "form"}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"BooleanCountingFunction", "[", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"compares", " ", "elements", " ", "in", " ", "list", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"element1", " ", "\[And]", " ", "element2"}], ",", " ", 
               RowBox[{"\[And]", " ", 
                RowBox[{
                 RowBox[{"is", " ", "later", " ", "swapped", " ", "with"}], 
                 " ", "=="}]}]}], ")"}], " ", "and", " ", "returns", " ", 
             "True", " ", "if", " ", "at", " ", "least", " ", "a", " ", 
             "majority", " ", "above", " ", "the", " ", "threshold", " ", "h",
              " ", "are", " ", "agree"}], "  ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"IntegerPart", "[", 
               RowBox[{"h", " ", 
                RowBox[{"Length", "[", "list", "]"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Length", "[", "list", "]"}]}], "\[IndentingNewLine]", 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Length", "[", "list", "]"}]}], "\[IndentingNewLine]", 
           "]"}], " ", "@@", " ", "ab"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "]"}], " ", "//.", " ", "swaps"}], " ", "//.",
        " ", 
       RowBox[{"And", " ", "\[Rule]", " ", "Equal"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"RepeatedTiming", "[", 
  RowBox[{"majority", "[", 
   RowBox[{"0.95", ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.728639865085374*^9, 3.7286399188725557`*^9}, {
  3.72864451867556*^9, 3.728644530538178*^9}, {3.7287232925613337`*^9, 
  3.7287233454224763`*^9}},ExpressionUUID->"9e2d89fc-db27-437d-82df-\
38162c24d45b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["27/02/2018", "Section",
 CellChangeTimes->{{3.7287311453051596`*^9, 
  3.728731148633997*^9}},ExpressionUUID->"009118e8-4a7e-4ac1-a824-\
6c16de4c1a71"],

Cell["\<\

I wonder if using Dispatch to package the rules would increase performance\
\>", "Text",
 CellChangeTimes->{{3.7287234353167095`*^9, 
  3.728723456187987*^9}},ExpressionUUID->"814e721b-49aa-482c-a687-\
f6abd9d1b9bc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "dispatchedMajority", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dispatchedMajority", "[", " ", 
   RowBox[{"h_", ",", " ", "list_"}], "]"}], ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{
    "Returns", " ", "True", " ", "if", " ", "a", " ", "majority", " ", 
     "above", " ", "the", " ", 
     RowBox[{"threshold", " ", "'"}], 
     RowBox[{"h", "'"}], " ", "is", " ", "reached", " ", "in", " ", "list"}], 
    ";", "\[IndentingNewLine]", "\t", 
    RowBox[{
    "Returns", " ", "False", " ", "if", " ", "no", " ", "majority", " ", 
     "above", " ", "the", " ", 
     RowBox[{"threshold", " ", "'"}], 
     RowBox[{"h", "'"}], " ", "is", " ", "reached", " ", "in", " ", "list"}], 
    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", "inputs", ";", 
    "\[IndentingNewLine]", "\t\t", 
    RowBox[{"h", ":", " ", "threshold"}], ";", "\[IndentingNewLine]", "\t\t", 
    RowBox[{"list", ":", " ", 
     RowBox[{
     "list", " ", "of", " ", "elements", " ", "to", " ", "check"}]}]}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"ab", ",", " ", "swaps"}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ab", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"stringer", "[", "i", "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "1", ",", " ", 
          RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{"dummy", " ", "list", " ", "of", " ", 
       RowBox[{"{", 
        RowBox[{
        "ab1", ",", " ", "ab2", ",", " ", "ab3", ",", " ", "...", ",", " ", 
         "abN"}], "}"}], " ", "where", " ", "N", " ", "is", " ", "the", " ", 
       "length", " ", "of", " ", "list"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"swaps", " ", "=", "  ", 
      RowBox[{"Dispatch", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ab", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "\[Rule]", " ", 
          RowBox[{"list", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", " ", 
           RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}], "]"}]}], 
     ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "creates", " ", "a", " ", "list", " ", "of", " ", "transformations", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ab1", " ", "\[Rule]", " ", 
          RowBox[{"list", "[", "1", "]"}]}], ",", " ", 
         RowBox[{"ab2", " ", "\[Rule]", " ", 
          RowBox[{"list", "[", "2", "]"}]}], ",", " ", "...", ",", " ", 
         RowBox[{"abN", " ", "\[Rule]", " ", 
          RowBox[{"list", "[", "N", "]"}]}]}], "}"}], " ", "to", " ", "swap", 
       " ", "back", " ", "after", " ", "BooleanCountingFunction"}], " ", 
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"BooleanConvert", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "converts", " ", "from", " ", "a", " ", "functional", " ", "form", 
          " ", "to", " ", "disjunctive", " ", "normal", " ", "form"}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"BooleanCountingFunction", "[", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"compares", " ", "elements", " ", "in", " ", "list", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"element1", " ", "\[And]", " ", "element2"}], ",", " ", 
              RowBox[{"\[And]", " ", 
               RowBox[{
                RowBox[{"is", " ", "later", " ", "swapped", " ", "with"}], 
                " ", "=="}]}]}], ")"}], " ", "and", " ", "returns", " ", 
            "True", " ", "if", " ", "at", " ", "least", " ", "a", " ", 
            "majority", " ", "above", " ", "the", " ", "threshold", " ", "h", 
            " ", "are", " ", "agree"}], "  ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"IntegerPart", "[", 
              RowBox[{"h", " ", 
               RowBox[{"Length", "[", "list", "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Length", "[", "list", "]"}]}], "\[IndentingNewLine]", 
            "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Length", "[", "list", "]"}]}], "\[IndentingNewLine]", 
          "]"}], " ", "@@", " ", "ab"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}], " ", "//.", " ", "swaps"}], " ", "//.", 
      " ", 
      RowBox[{"And", " ", "\[Rule]", " ", "Equal"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.728723466999837*^9, 3.728723595913258*^9}, {
  3.7287236392475944`*^9, 3.7287236463282766`*^9}, {3.728723723077608*^9, 
  3.7287237767865906`*^9}, {3.728723854208249*^9, 
  3.728723854755209*^9}},ExpressionUUID->"b0b5e303-2a62-42a6-9521-\
4e493eb4d349"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tt", " ", ":=", " ", 
   RowBox[{"Catenate", "[", 
    RowBox[{"{", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", " ", "i"}], "]"}], "]"}], "}"}],
     "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dispatched", " ", "=", " ", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"RepeatedTiming", "[", "\[IndentingNewLine]", 
       RowBox[{"dispatchedMajority", "[", "\[IndentingNewLine]", 
        RowBox[{"0.6", ",", "\[IndentingNewLine]", "tt"}], "]"}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "0", ",", " ", "12"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"notDispatched", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"RepeatedTiming", "[", "\[IndentingNewLine]", 
       RowBox[{"majority", "[", "\[IndentingNewLine]", 
        RowBox[{"0.6", ",", "\[IndentingNewLine]", "tt"}], "]"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "0", ",", " ", "12"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", "notDispatched", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Transpose", "[", "dispatched", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], " ", "}"}], ",", " ", 
   RowBox[{"Joined", " ", "\[Rule]", "  ", "True"}], ",", " ", 
   RowBox[{"PlotLabels", "\[Rule]", 
    RowBox[{"{", " ", 
     RowBox[{"\"\<Not Dispatched\>\"", ",", "\"\<Dispatched\>\""}], "}"}]}], 
   ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Number of elements in list\>\"", ",", " ", "\"\<seconds\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7287241954128857`*^9, 3.7287242687706766`*^9}, {
   3.7287243236916056`*^9, 3.728724463656083*^9}, {3.728724498356801*^9, 
   3.728724682795637*^9}, 3.7287247284557247`*^9, {3.7287249501169777`*^9, 
   3.728724962299631*^9}, {3.728729733543714*^9, 3.728729737583927*^9}, {
   3.728735562422699*^9, 
   3.728735589431407*^9}},ExpressionUUID->"f32180c6-fad2-4484-9150-\
60278dcb340a"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", "notDispatched", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Transpose", "[", "dispatched", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], " ", "}"}], ",", " ", 
   RowBox[{"Joined", " ", "\[Rule]", "  ", "True"}], ",", " ", 
   RowBox[{"PlotLabels", "\[Rule]", 
    RowBox[{"{", " ", 
     RowBox[{"\"\<Not Dispatched\>\"", ",", "\"\<Dispatched\>\""}], "}"}]}], 
   ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Number of elements in list\>\"", ",", " ", "\"\<seconds\>\""}], 
     "}"}]}]}], "]"}]], "Input",ExpressionUUID->"7a90d205-b4dd-488a-89c3-\
a5a8c3ad2a0c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Last", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", "notDispatched", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "/", " ", 
  RowBox[{"Last", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", "dispatched", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7287301515558405`*^9, 
  3.7287301776085386`*^9}},ExpressionUUID->"5eda4f0d-da1a-46a6-9685-\
451b69404386"],

Cell["\<\

As we can see, using Dispatch in the majority function with lists with more \
than 10 elements is ~2 times faster. So let\[CloseCurlyQuote]s redefine \
majority to use Dispatch
\
\>", "Text",
 CellChangeTimes->{{3.7287299451515164`*^9, 3.7287299706473875`*^9}, {
  3.728730021890218*^9, 3.728730042733358*^9}, {3.7287301009345655`*^9, 
  3.728730138788653*^9}, {3.7287301835248623`*^9, 
  3.728730201975072*^9}},ExpressionUUID->"ee9fb372-7fc5-46a0-bec0-\
5534d5d71134"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "majority", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"majority", "[", " ", 
   RowBox[{"h_", ",", " ", "list_"}], "]"}], ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{
    "Returns", " ", "True", " ", "if", " ", "a", " ", "majority", " ", 
     "above", " ", "the", " ", 
     RowBox[{"threshold", " ", "'"}], 
     RowBox[{"h", "'"}], " ", "is", " ", "reached", " ", "in", " ", "list"}], 
    ";", "\[IndentingNewLine]", "\t", 
    RowBox[{
    "Returns", " ", "False", " ", "if", " ", "no", " ", "majority", " ", 
     "above", " ", "the", " ", 
     RowBox[{"threshold", " ", "'"}], 
     RowBox[{"h", "'"}], " ", "is", " ", "reached", " ", "in", " ", "list"}], 
    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", "inputs", ";", 
    "\[IndentingNewLine]", "\t\t", 
    RowBox[{"h", ":", " ", "threshold"}], ";", "\[IndentingNewLine]", "\t\t", 
    RowBox[{"list", ":", " ", 
     RowBox[{
     "list", " ", "of", " ", "elements", " ", "to", " ", "check"}]}]}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"ab", ",", " ", "swaps"}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ab", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"stringer", "[", "i", "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "1", ",", " ", 
          RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{"dummy", " ", "list", " ", "of", " ", 
       RowBox[{"{", 
        RowBox[{
        "ab1", ",", " ", "ab2", ",", " ", "ab3", ",", " ", "...", ",", " ", 
         "abN"}], "}"}], " ", "where", " ", "N", " ", "is", " ", "the", " ", 
       "length", " ", "of", " ", "list"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"swaps", " ", "=", "  ", 
      RowBox[{"Dispatch", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ab", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "\[Rule]", " ", 
          RowBox[{"list", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", " ", 
           RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}], "]"}]}], 
     ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "creates", " ", "a", " ", "list", " ", "of", " ", "transformations", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ab1", " ", "\[Rule]", " ", 
          RowBox[{"list", "[", "1", "]"}]}], ",", " ", 
         RowBox[{"ab2", " ", "\[Rule]", " ", 
          RowBox[{"list", "[", "2", "]"}]}], ",", " ", "...", ",", " ", 
         RowBox[{"abN", " ", "\[Rule]", " ", 
          RowBox[{"list", "[", "N", "]"}]}]}], "}"}], " ", "to", " ", "swap", 
       " ", "back", " ", "after", " ", "BooleanCountingFunction"}], " ", 
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"BooleanConvert", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "converts", " ", "from", " ", "a", " ", "functional", " ", "form", 
          " ", "to", " ", "disjunctive", " ", "normal", " ", "form"}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"BooleanCountingFunction", "[", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"compares", " ", "elements", " ", "in", " ", "list", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"element1", " ", "\[And]", " ", "element2"}], ",", " ", 
              RowBox[{"\[And]", " ", 
               RowBox[{
                RowBox[{"is", " ", "later", " ", "swapped", " ", "with"}], 
                " ", "=="}]}]}], ")"}], " ", "and", " ", "returns", " ", 
            "True", " ", "if", " ", "at", " ", "least", " ", "a", " ", 
            "majority", " ", "above", " ", "the", " ", "threshold", " ", "h", 
            " ", "are", " ", "agree"}], "  ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"IntegerPart", "[", 
              RowBox[{"h", " ", 
               RowBox[{"Length", "[", "list", "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Length", "[", "list", "]"}]}], "\[IndentingNewLine]", 
            "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Length", "[", "list", "]"}]}], "\[IndentingNewLine]", 
          "]"}], " ", "@@", " ", "ab"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}], " ", "//.", " ", "swaps"}], " ", "//.", 
      " ", 
      RowBox[{"And", " ", "\[Rule]", " ", "Equal"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.728730051925418*^9, 
  3.7287300553164244`*^9}},ExpressionUUID->"5426871d-b88c-43c4-abce-\
069de6e43c70"],

Cell["\<\

Figure out what the majority is, and thus whether the state of a member \
changes.\
\>", "Text",
 CellChangeTimes->{{3.7287299777601748`*^9, 3.728729983001563*^9}, 
   3.7287300687357826`*^9, {3.728730245796447*^9, 
   3.7287303296448364`*^9}},ExpressionUUID->"aafd1b09-afb3-4721-8c41-\
36f009233887"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "adopts", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"adopts", "[", 
    RowBox[{"h_", ",", " ", "list_"}], "]"}], " ", ":=", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Checks", " ", "if", " ", "there", " ", "is", " ", "a", " ", "majority", 
      " ", "in", " ", "list", " ", "above", " ", "threshold", " ", "h"}], ",",
      " ", 
     RowBox[{
     "then", " ", "returns", " ", "the", " ", "majority", " ", "state"}]}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"If", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"majority", "[", 
      RowBox[{"h", ",", " ", "list"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Commonest", "[", "list", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", "False"}], 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"adopts", "[", 
  RowBox[{"0.8", ",", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"adopts", "[", 
  RowBox[{"0.8", ",", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"adopts", "[", 
  RowBox[{"0.8", ",", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7287304088243027`*^9, 3.728730411401458*^9}, {
  3.7287305767937737`*^9, 3.7287306488667927`*^9}, {3.7287306886748343`*^9, 
  3.728730750344814*^9}, {3.728730817380421*^9, 3.7287308545202446`*^9}, {
  3.728730947457083*^9, 
  3.7287311298002634`*^9}},ExpressionUUID->"da1ab219-5ae3-43cb-8e23-\
bf3a3d99c671"],

Cell["\<\

Try implementing with cellular automata\
\>", "Text",
 CellChangeTimes->{{3.72873495304644*^9, 
  3.728734963506795*^9}},ExpressionUUID->"7aef2917-b6ce-4285-a543-\
60cfaa0216c5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"With", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sample", " ", "=", " ", 
        RowBox[{"RandomSample", "[", 
         RowBox[{
          RowBox[{"Catenate", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"i", ",", " ", "1", ",", " ", "50"}], "}"}]}], "]"}], 
           "]"}], ",", " ", 
          StyleBox["50",
           FontWeight->"Plain"]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"steps", " ", "=", " ", "10"}], ",", "\[IndentingNewLine]", 
       RowBox[{"r", " ", "=", " ", "4"}], ",", "\[IndentingNewLine]", 
       RowBox[{"h", " ", "=", " ", "0.6"}]}], "\[IndentingNewLine]", "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"res", " ", "=", " ", "\[IndentingNewLine]", 
      RowBox[{"CellularAutomaton", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"adopts", "[", 
            RowBox[{"h", ",", "#"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "r"}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", "sample", 
        ",", "\[IndentingNewLine]", "steps"}], "]"}]}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ArrayPlot", "[", "res", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7287320692976604`*^9, 3.7287320934972954`*^9}, {
  3.728732134696285*^9, 3.7287321982396336`*^9}, {3.728732345387929*^9, 
  3.7287324778852563`*^9}, {3.7287325107364006`*^9, 3.728732511498762*^9}, {
  3.728733324902649*^9, 3.7287333737503633`*^9}, {3.7287334473208995`*^9, 
  3.7287334803453074`*^9}, {3.728733636207463*^9, 3.728733714835802*^9}, {
  3.72873386033177*^9, 3.7287339319161015`*^9}, {3.7287340514026675`*^9, 
  3.7287340534966946`*^9}, {3.728734282996315*^9, 3.7287342835434813`*^9}, {
  3.7287353122986326`*^9, 
  3.7287353894851522`*^9}},ExpressionUUID->"67ba8d43-49f5-4618-ab78-\
1629097b8a6c"],

Cell["\<\

As we can see, group think is beginning to emerge\
\>", "Text",
 CellChangeTimes->{{3.728735066657968*^9, 
  3.7287350756166143`*^9}},ExpressionUUID->"9572f5ff-6b9d-48b2-bbb9-\
6dfd93ff01b8"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.72873828715724*^9, 
  3.728738288798071*^9}},ExpressionUUID->"79f41869-f494-4bc7-a8e6-\
af7d7f321fc0"],

Cell[BoxData[
 RowBox[{"RandomGraph", "[", 
  RowBox[{"{", 
   RowBox[{"15", ",", "105"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.72873806558862*^9, 3.728738129146763*^9}, {
  3.728738191566894*^9, 3.7287382351248865`*^9}, {3.7287383102607718`*^9, 
  3.7287383105264215`*^9}},ExpressionUUID->"c768db89-d20c-4779-8345-\
8af9a06327b3"],

Cell[BoxData[
 RowBox[{"NearestNeighborGraph", "[", 
  RowBox[{
   RowBox[{"Range", "[", "15", "]"}], ",", " ", "8"}], "]"}]], "Input",
 CellChangeTimes->{{3.728738992015622*^9, 
  3.7287390073666553`*^9}},ExpressionUUID->"1a5f7234-6d74-4267-a63d-\
6072e502ba4f"],

Cell[BoxData[
 RowBox[{"NearestNeighborGraph", "[", 
  RowBox[{
   RowBox[{"RandomChoice", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"DistanceFunction", "\[Rule]", "JaccardDissimilarity"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7287390435583305`*^9, 
  3.7287390435737877`*^9}},ExpressionUUID->"eacddb31-88cc-4afa-81f1-\
0aefca095834"],

Cell[BoxData[
 RowBox[{"RelationGraph", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"#1", "<", "6"}], "&&", 
     RowBox[{"#2", "\[GreaterEqual]", "6"}]}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
     "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7287391226291137`*^9, 
  3.7287391226291137`*^9}},ExpressionUUID->"0e8c7055-1116-4e1b-831f-\
c266d719b408"]
}, Open  ]],

Cell[CellGroupData[{

Cell["28/02/2018", "Section",
 CellChangeTimes->{{3.7288270121549892`*^9, 3.728827014250411*^9}}],

Cell["\<\
Implementing Small-World networks using IGraph/M 
(from https://mathematica.stackexchange.com/questions/106122/small-world-\
network-on-a-square-grid)\
\>", "Text",
 CellChangeTimes->{{3.728827019233245*^9, 3.7288270336118526`*^9}}],

Cell[BoxData[
 RowBox[{"<<", "IGraphM`"}]], "Input",
 CellChangeTimes->{{3.7288270366938562`*^9, 3.728827042009709*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "  ", "=", " ", 
   RowBox[{"GridGraph", "[", 
    RowBox[{"{", 
     RowBox[{"5", ",", "5"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coords", " ", "=", " ", 
   RowBox[{"GraphEmbedding", "[", "g", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"IGRewireEdges", "[", 
    RowBox[{"g", ",", " ", "0.3"}], "]"}], ",", " ", 
   RowBox[{"VertexCoordinates", "\[Rule]", "coords"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.728827068104916*^9, 3.728827105736874*^9}}],

Cell[BoxData[
 RowBox[{"?", "IGMakeLattice"}]], "Input",
 CellChangeTimes->{{3.728827942597787*^9, 3.728827944847475*^9}}],

Cell["\<\

Need to add more neighbors\
\>", "Text",
 CellChangeTimes->{{3.7288271338977757`*^9, 3.728827145166787*^9}}],

Cell[BoxData[{
 RowBox[{"g", " ", "=", " ", 
  RowBox[{"IGMakeLattice", "[", 
   RowBox[{
    RowBox[{"{", "8", "}"}], ",", " ", 
    RowBox[{"Radius", " ", "\[Rule]", "2"}], " ", ",", " ", 
    RowBox[{"Periodic", "\[Rule]", "True"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"g2", " ", "=", " ", 
  RowBox[{"IGRewireEdges", "[", 
   RowBox[{"g", ",", " ", "0.3"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7288271485424843`*^9, 3.728827230947371*^9}, {
   3.728827281436095*^9, 3.728827305094986*^9}, {3.7288273445168743`*^9, 
   3.728827398283689*^9}, {3.728827511301258*^9, 3.728827512289311*^9}, {
   3.7288278660022287`*^9, 3.728827887787642*^9}, {3.728828077019603*^9, 
   3.728828133985721*^9}, {3.7288281678265343`*^9, 3.728828172560218*^9}, {
   3.728828233850749*^9, 3.728828249922721*^9}, {3.728828366727294*^9, 
   3.728828385964589*^9}, {3.728828471562574*^9, 3.728828480240161*^9}, 
   3.728828619513932*^9}],

Cell["\<\

Turn into func and assign values to the vertices\
\>", "Text",
 CellChangeTimes->{{3.728827890929241*^9, 3.7288279283799963`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "grapher", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"grapher", "[", 
    RowBox[{"n_", ",", " ", "k_", ",", " ", "h_", ",", " ", "e_"}], "]"}], 
   " ", ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "r", ",", " ", "states", ",", " ", "graph", ",", " ", "rewiredGraph"}], 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"r", " ", "=", " ", 
       RowBox[{"Round", "[", 
        FractionBox["k", "2"], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"states", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"i", " ", "\[Rule]", " ", 
          RowBox[{"ToString", "[", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", " ", "n"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"graph", " ", "=", " ", 
       RowBox[{"IGMakeLattice", "[", 
        RowBox[{
         RowBox[{"{", "n", "}"}], ",", " ", 
         RowBox[{"Radius", " ", "\[Rule]", "r"}], ",", " ", 
         RowBox[{"Periodic", "\[Rule]", "True"}], ",", " ", 
         RowBox[{"VertexLabels", "\[Rule]", " ", "states"}]}], "]"}]}]}]}], 
    " ", "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"rewiredGraph", " ", "=", " ", 
      RowBox[{"IGRewireEdges", "[", 
       RowBox[{"graph", ",", " ", "e"}], "]"}]}], "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Show", "[", "graph", "]"}], ";"}], "*)"}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"grapher", "[", 
  RowBox[{"9", ",", " ", "4", ",", " ", "1", ",", " ", "0.3"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7288279011917048`*^9, 3.7288279307955093`*^9}, {
  3.728828556030602*^9, 3.728828756769177*^9}, {3.728828881028146*^9, 
  3.728828900036545*^9}, {3.728830798838839*^9, 3.728830799185902*^9}, {
  3.7288312901348667`*^9, 3.728831297824257*^9}, {3.728831333118332*^9, 
  3.728831349075329*^9}, {3.728831397739689*^9, 3.7288315573694963`*^9}, {
  3.728831774031896*^9, 3.728831807235681*^9}, {3.7288357057867937`*^9, 
  3.728835732257584*^9}, {3.7288369552427588`*^9, 3.728837008538468*^9}, {
  3.7288372434913473`*^9, 3.7288372482172327`*^9}}],

Cell["Use IGRandomWalk to randomly select the node to update", "Text",
 CellChangeTimes->{{3.728837334274022*^9, 3.7288373499077787`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["01/03/2018", "Section",
 CellChangeTimes->{{3.728898524032114*^9, 3.7288985284127502`*^9}}],

Cell["\<\
Looking through example netwrok graphs to figure out exactly how vertices and \
their properties work\
\>", "Text",
 CellChangeTimes->{{3.728899250436221*^9, 3.728899270377273*^9}}],

Cell[BoxData[
 RowBox[{"ExampleData", "[", "\"\<NetworkGraph\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7288988044865522`*^9, 3.728898808998942*^9}}],

Cell["\<\

CondensedMatterCollaborations has properties other than the usual \
{VertexCoordinates,VertexShape,VertexShapeFunction,VertexSize,VertexStyle}\
\>", "Text",
 CellChangeTimes->{{3.728899276681156*^9, 3.7288992977524157`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"b", " ", "=", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"ExampleData", "[", 
     RowBox[{"{", 
      RowBox[{
      "\"\<NetworkGraph\>\"", ",", "\"\<EastAfricaEmbassyAttacks\>\""}], 
      "}"}], "]"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"IGVertexPropertyList", "[", "b", "]"}]}], "Input",
 CellChangeTimes->{{3.728898571808886*^9, 3.728898581123312*^9}, {
  3.7288986707249393`*^9, 3.728898722960545*^9}, {3.7288988419620733`*^9, 
  3.728898895234931*^9}, {3.728899067531967*^9, 3.728899083197349*^9}, {
  3.728899152400838*^9, 3.728899166640955*^9}, {3.728899878277149*^9, 
  3.728899883565548*^9}, {3.7289002050335693`*^9, 3.728900206327682*^9}, {
  3.728909848687682*^9, 3.728909854251305*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "Osama", "Salim", "Ali", "Abouhlaima", "Kherchtou", "Fawwaz", 
       "Abdullah", "Hage", "Odeh", "Owhali", "Fazul", "Azzam", "Atwah", 
       "Fahad", "Fadhil", "Khalfan", "Ghailani", "Awad"}, {Null, 
       SparseArray[
       Automatic, {18, 18}, 0, {
        1, {{0, 5, 8, 13, 15, 20, 24, 31, 40, 48, 55, 62, 67, 76, 82, 89, 93, 
          97, 102}, {{2}, {3}, {7}, {8}, {10}, {1}, {7}, {8}, {1}, {4}, {5}, {
          8}, {11}, {3}, {8}, {3}, {6}, {8}, {9}, {13}, {5}, {8}, {10}, {
          12}, {1}, {2}, {9}, {10}, {11}, {13}, {14}, {1}, {2}, {3}, {4}, {
          5}, {6}, {9}, {11}, {15}, {5}, {7}, {8}, {10}, {11}, {12}, {13}, {
          15}, {1}, {6}, {7}, {9}, {11}, {12}, {13}, {3}, {7}, {8}, {9}, {
          10}, {12}, {13}, {6}, {9}, {10}, {11}, {13}, {5}, {7}, {9}, {10}, {
          11}, {12}, {14}, {15}, {18}, {7}, {13}, {15}, {16}, {17}, {18}, {
          8}, {9}, {13}, {14}, {16}, {17}, {18}, {14}, {15}, {17}, {18}, {
          14}, {15}, {16}, {18}, {13}, {14}, {15}, {16}, {17}}}, Pattern}]}, {
      EdgeStyle -> {
        UndirectedEdge["Kherchtou", "Odeh"] -> Thickness[0.0036], 
         UndirectedEdge["Hage", "Fadhil"] -> Thickness[0.0048], 
         UndirectedEdge["Abdullah", "Owhali"] -> Thickness[0.0048], 
         UndirectedEdge["Abouhlaima", "Hage"] -> Thickness[0.0016], 
         UndirectedEdge["Odeh", "Owhali"] -> Thickness[0.0048], 
         UndirectedEdge["Salim", "Hage"] -> Thickness[0.0036], 
         UndirectedEdge["Fazul", "Azzam"] -> Thickness[0.0048], 
         UndirectedEdge["Fahad", "Khalfan"] -> Thickness[0.0064], 
         UndirectedEdge["Abdullah", "Fahad"] -> Thickness[0.0048], 
         UndirectedEdge["Odeh", "Fadhil"] -> Thickness[0.0048], 
         UndirectedEdge["Atwah", "Fahad"] -> Thickness[0.0012], 
         UndirectedEdge["Salim", "Abdullah"] -> Thickness[0.0036], 
         UndirectedEdge["Khalfan", "Ghailani"] -> Thickness[0.0012], 
         UndirectedEdge["Odeh", "Azzam"] -> Thickness[0.0048], 
         UndirectedEdge["Owhali", "Atwah"] -> Thickness[0.0012], 
         UndirectedEdge["Ghailani", "Awad"] -> Thickness[0.0012], 
         UndirectedEdge["Fadhil", "Awad"] -> Thickness[0.0048], 
         UndirectedEdge["Odeh", "Fazul"] -> Thickness[0.0064], 
         UndirectedEdge["Atwah", "Fadhil"] -> Thickness[0.0012], 
         UndirectedEdge["Abdullah", "Atwah"] -> Thickness[0.0048], 
         UndirectedEdge["Kherchtou", "Fawwaz"] -> Thickness[0.0036], 
         UndirectedEdge["Osama", "Abdullah"] -> Thickness[0.0048], 
         UndirectedEdge["Ali", "Kherchtou"] -> Thickness[0.0036], 
         UndirectedEdge["Osama", "Salim"] -> Thickness[0.005200000000000001], 
         UndirectedEdge["Abdullah", "Fazul"] -> Thickness[0.0048], 
         UndirectedEdge["Ali", "Hage"] -> Thickness[0.0016], 
         UndirectedEdge["Fawwaz", "Owhali"] -> Thickness[0.0036], 
         UndirectedEdge["Fahad", "Ghailani"] -> Thickness[0.0048], 
         UndirectedEdge["Fahad", "Fadhil"] -> Thickness[0.0064], 
         UndirectedEdge["Ali", "Abouhlaima"] -> Thickness[0.0036], 
         UndirectedEdge["Osama", "Hage"] -> Thickness[0.0048], 
         UndirectedEdge["Odeh", "Atwah"] -> Thickness[0.0048], 
         UndirectedEdge["Kherchtou", "Atwah"] -> Thickness[0.0036], 
         UndirectedEdge["Fadhil", "Khalfan"] -> Thickness[0.0064], 
         UndirectedEdge["Owhali", "Fazul"] -> Thickness[0.0064], 
         UndirectedEdge["Atwah", "Awad"] -> Thickness[0.0012], 
         UndirectedEdge["Azzam", "Atwah"] -> Thickness[0.0012], 
         UndirectedEdge["Fazul", "Atwah"] -> Thickness[0.0012], 
         UndirectedEdge["Fawwaz", "Hage"] -> Thickness[0.0048], 
         UndirectedEdge["Fadhil", "Ghailani"] -> Thickness[0.0048], 
         UndirectedEdge["Fahad", "Awad"] -> Thickness[0.0012], 
         UndirectedEdge["Khalfan", "Awad"] -> Thickness[0.0012], 
         UndirectedEdge["Fawwaz", "Azzam"] -> Thickness[0.0036], 
         UndirectedEdge["Abdullah", "Odeh"] -> Thickness[0.0048], 
         UndirectedEdge["Hage", "Fazul"] -> Thickness[0.0048], 
         UndirectedEdge["Owhali", "Azzam"] -> 
         Thickness[0.0028000000000000004`], UndirectedEdge["Hage", "Odeh"] -> 
         Thickness[0.0064], UndirectedEdge["Ali", "Fazul"] -> 
         Thickness[0.0072], UndirectedEdge["Kherchtou", "Hage"] -> 
         Thickness[0.0036], UndirectedEdge["Osama", "Owhali"] -> 
         Thickness[0.0036], UndirectedEdge["Osama", "Ali"] -> 
         Thickness[0.0036]}, EdgeWeight -> CompressedData["
1:eJxTTMoPSmVkYGAwBuIlBbZc1xc/sAcSIJb9DrnW14E77sFpmDghulpknfvD
qiNQ/nM0Pm59uOxBdwcuGmLPE4rl3wSCRC5CxfehqdtHkIaZg92+fQTcgWke
AICcz/I=
        "], GraphLayout -> {"Dimension" -> 2}, ImageSize -> Medium, 
       Properties -> {
        "Ghailani" -> {
          "FullName" -> "Ahmed Khalfan Ghailani", "Group" -> 
           "Dar es Salaam Cell"}, 
         "Osama" -> {"FullName" -> "Osama Bin Laden", "Group" -> "Planners"}, 
         "Fazul" -> {
          "FullName" -> "Fazul Abdullah Mohammed", "Group" -> "Nairobi Cell"},
          "Fadhil" -> {
          "FullName" -> "Mustafa Mohammed Fadhil", "Group" -> 
           "Dar es Salaam Cell"}, 
         "Atwah" -> {
          "FullName" -> "Muhsin Musa Matwalli Atwah", "Group" -> "Planners"}, 
         "Ali" -> {"FullName" -> "Ali Mohamed", "Group" -> "Planners"}, 
         "Fahad" -> {
          "FullName" -> "Fahad Mohammed Ally Msalam", "Group" -> 
           "Dar es Salaam Cell"}, 
         "Fawwaz" -> {
          "FullName" -> "Khalid al-Fawwaz", "Group" -> "Planners"}, 
         "Odeh" -> {
          "FullName" -> "Mohamed Sadeek Odeh", "Group" -> "Nairobi Cell"}, 
         "Khalfan" -> {
          "FullName" -> "Khalfan Khamis Mohamed", "Group" -> 
           "Dar es Salaam Cell"}, 
         "Hage" -> {"FullName" -> "Wadih el-Hage", "Group" -> "Planners"}, 
         "Owhali" -> {
          "FullName" -> "Mohamed Rashed Daoud al-Owhali", "Group" -> 
           "Nairobi Cell"}, 
         "Salim" -> {"FullName" -> "Mamdouh Salim", "Group" -> "Planners"}, 
         "Abdullah" -> {
          "FullName" -> "Abdullah Ahmed Abdullah", "Group" -> "Planners"}, 
         "Abouhlaima" -> {"FullName" -> "Abouhlaima", "Group" -> "Planners"}, 
         "Kherchtou" -> {"FullName" -> "Kherchtou", "Group" -> "Planners"}, 
         "Awad" -> {
          "FullName" -> "Hamden Khalif Allah Awad", "Group" -> 
           "Dar es Salaam Cell"}, 
         "Azzam" -> {"FullName" -> "Azzam", "Group" -> "Nairobi Cell"}}, 
       VertexCoordinates -> {{0.2435, 0.5650000000000001}, {
        0.5740000000000001, 0.513}, {0.41200000000000003`, 
        0.41500000000000004`}, {0.6645, 0.357}, {0.5135, 0.293}, {0.216, 
        0.33}, {0.2925, 0.461}, {0.5955, 0.424}, {0.2285, 0.209}, {0.0115, 
        0.272}, {0.2405, 0.049}, {0.046, 0.115}, {0.423, 0.069}, {0.583, 
        0.194}, {0.704, 0.234}, {0.8170000000000001, 0.111}, {0.7015, 
        0.016}, {0.5760000000000001, 0.059000000000000004`}}, VertexLabels -> {
         Placed["Name", Above], "Osama" -> Placed["Name", Before], "Odeh" -> 
         Placed["Name", Before], "Kherchtou" -> Placed["Name", After], 
         "Fadhil" -> Placed["Name", After], "Fazul" -> Placed["Name", Below], 
         "Abouhlaima" -> Placed["Name", After], "Atwah" -> 
         Placed["Name", Below], "Ali" -> Placed["Name", Above], "Abdullah" -> 
         Placed["Name", Before], "Hage" -> Placed["Name", After], "Azzam" -> 
         Placed["Name", Below], "Owhali" -> Placed["Name", After], "Ghailani" -> 
         Placed["Name", After], "Fahad" -> Placed["Name", Before], "Awad" -> 
         Placed["Name", Below], "Khalfan" -> Placed["Name", Before]}, 
       VertexStyle -> {
        "Osama" -> GrayLevel[0], "Fazul" -> RGBColor[0.6, 0.4, 0.2], "Fadhil" -> 
         RGBColor[0.5, 0, 0.5], "Azzam" -> RGBColor[0.6, 0.4, 0.2], "Hage" -> 
         GrayLevel[0], "Ghailani" -> RGBColor[0.5, 0, 0.5], "Abouhlaima" -> 
         GrayLevel[0], "Odeh" -> RGBColor[0.6, 0.4, 0.2], "Kherchtou" -> 
         GrayLevel[0], "Khalfan" -> RGBColor[0.5, 0, 0.5], "Fawwaz" -> 
         GrayLevel[0], "Awad" -> RGBColor[0.5, 0, 0.5], "Fahad" -> 
         RGBColor[0.5, 0, 0.5], "Abdullah" -> GrayLevel[0], "Atwah" -> 
         GrayLevel[0], "Owhali" -> RGBColor[0.6, 0.4, 0.2], "Ali" -> 
         GrayLevel[0], "Salim" -> GrayLevel[0]}}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}], 
        Thickness[0.005200000000000001], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}], 
        Thickness[0.0036], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], 
        Thickness[0.0048], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], 
        Thickness[0.0048], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}], 
        Thickness[0.0036], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], 
        Thickness[0.0036], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], 
        Thickness[0.0036], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}], 
        Thickness[0.0036], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}], 
        Thickness[0.0036], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], 
        Thickness[0.0016], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$11", Automatic, Center]}], 
        Thickness[0.0072], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], 
        Thickness[0.0016], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], 
        Thickness[0.0036], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], 
        Thickness[0.0036], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], 
        Thickness[0.0036], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}], 
        Thickness[0.0036], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$6", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], 
        Thickness[0.0048], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$6", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}], 
        Thickness[0.0036], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$6", Automatic, Center], 
          DynamicLocation["VertexID$12", Automatic, Center]}], 
        Thickness[0.0036], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], 
        Thickness[0.0048], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}], 
        Thickness[0.0048], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$11", Automatic, Center]}], 
        Thickness[0.0048], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}], 
        Thickness[0.0048], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], 
        Thickness[0.0048], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], 
        Thickness[0.0064], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$11", Automatic, Center]}], 
        Thickness[0.0048], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], 
        Thickness[0.0048], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}], 
        Thickness[0.0048], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$11", Automatic, Center]}], 
        Thickness[0.0064], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$12", Automatic, Center]}], 
        Thickness[0.0048], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}], 
        Thickness[0.0048], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], 
        Thickness[0.0048], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$10", Automatic, Center], 
          DynamicLocation["VertexID$11", Automatic, Center]}], 
        Thickness[0.0064], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$10", Automatic, Center], 
          DynamicLocation["VertexID$12", Automatic, Center]}], 
        Thickness[0.0028000000000000004`], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$10", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}], 
        Thickness[0.0012], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$11", Automatic, Center], 
          DynamicLocation["VertexID$12", Automatic, Center]}], 
        Thickness[0.0048], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$11", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}], 
        Thickness[0.0012], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$12", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}], 
        Thickness[0.0012], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$13", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}], 
        Thickness[0.0012], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$13", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], 
        Thickness[0.0012], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$13", Automatic, Center], 
          DynamicLocation["VertexID$18", Automatic, Center]}], 
        Thickness[0.0012], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$14", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}], 
        Thickness[0.0064], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$14", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], 
        Thickness[0.0064], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$14", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], 
        Thickness[0.0048], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$14", Automatic, Center], 
          DynamicLocation["VertexID$18", Automatic, Center]}], 
        Thickness[0.0012], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$15", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], 
        Thickness[0.0064], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$15", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], 
        Thickness[0.0048], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$15", Automatic, Center], 
          DynamicLocation["VertexID$18", Automatic, Center]}], 
        Thickness[0.0048], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$16", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], 
        Thickness[0.0012], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$16", Automatic, Center], 
          DynamicLocation["VertexID$18", Automatic, Center]}], 
        Thickness[0.0012], StripOnInput -> False], 
       StyleBox[
        LineBox[{
          DynamicLocation["VertexID$17", Automatic, Center], 
          DynamicLocation["VertexID$18", Automatic, Center]}], 
        Thickness[0.0012], StripOnInput -> False]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0.2435, 0.5650000000000001}, 0.010254015000000002`], 
           GrayLevel[0], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox["\"Osama\"", TraditionalForm], 
          Offset[{-2, 0}, 
           DynamicLocation["VertexID$1", Automatic, Left]], 
          ImageScaled[{1, 0.5}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0.5740000000000001, 0.513}, 0.010254015000000002`], 
           GrayLevel[0], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox["\"Salim\"", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$2", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           
           DiskBox[{0.41200000000000003`, 0.41500000000000004`}, 
            0.010254015000000002`], 
           GrayLevel[0], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox["\"Ali\"", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$3", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0.6645, 0.357}, 0.010254015000000002`], 
           GrayLevel[0], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox["\"Abouhlaima\"", TraditionalForm], 
          Offset[{2, 0}, 
           DynamicLocation["VertexID$4", Automatic, Right]], 
          ImageScaled[{0, 0.5}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0.5135, 0.293}, 0.010254015000000002`], 
           GrayLevel[0], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$5"], 
         InsetBox[
          FormBox["\"Kherchtou\"", TraditionalForm], 
          Offset[{2, 0}, 
           DynamicLocation["VertexID$5", Automatic, Right]], 
          ImageScaled[{0, 0.5}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0.216, 0.33}, 0.010254015000000002`], 
           GrayLevel[0], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$6"], 
         InsetBox[
          FormBox["\"Fawwaz\"", TraditionalForm], 
          Offset[{0, 2}, 
           DynamicLocation["VertexID$6", Automatic, Top]], 
          ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0.2925, 0.461}, 0.010254015000000002`], 
           GrayLevel[0], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$7"], 
         InsetBox[
          FormBox["\"Abdullah\"", TraditionalForm], 
          Offset[{-2, 0}, 
           DynamicLocation["VertexID$7", Automatic, Left]], 
          ImageScaled[{1, 0.5}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0.5955, 0.424}, 0.010254015000000002`], 
           GrayLevel[0], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$8"], 
         InsetBox[
          FormBox["\"Hage\"", TraditionalForm], 
          Offset[{2, 0}, 
           DynamicLocation["VertexID$8", Automatic, Right]], 
          ImageScaled[{0, 0.5}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0.2285, 0.209}, 0.010254015000000002`], 
           RGBColor[0.6, 0.4, 0.2], StripOnInput -> False], "DynamicName", 
          BoxID -> "VertexID$9"], 
         InsetBox[
          FormBox["\"Odeh\"", TraditionalForm], 
          Offset[{-2, 0}, 
           DynamicLocation["VertexID$9", Automatic, Left]], 
          ImageScaled[{1, 0.5}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0.0115, 0.272}, 0.010254015000000002`], 
           RGBColor[0.6, 0.4, 0.2], StripOnInput -> False], "DynamicName", 
          BoxID -> "VertexID$10"], 
         InsetBox[
          FormBox["\"Owhali\"", TraditionalForm], 
          Offset[{2, 0}, 
           DynamicLocation["VertexID$10", Automatic, Right]], 
          ImageScaled[{0, 0.5}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0.2405, 0.049}, 0.010254015000000002`], 
           RGBColor[0.6, 0.4, 0.2], StripOnInput -> False], "DynamicName", 
          BoxID -> "VertexID$11"], 
         InsetBox[
          FormBox["\"Fazul\"", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$11", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0.046, 0.115}, 0.010254015000000002`], 
           RGBColor[0.6, 0.4, 0.2], StripOnInput -> False], "DynamicName", 
          BoxID -> "VertexID$12"], 
         InsetBox[
          FormBox["\"Azzam\"", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$12", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0.423, 0.069}, 0.010254015000000002`], 
           GrayLevel[0], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$13"], 
         InsetBox[
          FormBox["\"Atwah\"", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$13", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0.583, 0.194}, 0.010254015000000002`], 
           RGBColor[0.5, 0, 0.5], StripOnInput -> False], "DynamicName", 
          BoxID -> "VertexID$14"], 
         InsetBox[
          FormBox["\"Fahad\"", TraditionalForm], 
          Offset[{-2, 0}, 
           DynamicLocation["VertexID$14", Automatic, Left]], 
          ImageScaled[{1, 0.5}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$14"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0.704, 0.234}, 0.010254015000000002`], 
           RGBColor[0.5, 0, 0.5], StripOnInput -> False], "DynamicName", 
          BoxID -> "VertexID$15"], 
         InsetBox[
          FormBox["\"Fadhil\"", TraditionalForm], 
          Offset[{2, 0}, 
           DynamicLocation["VertexID$15", Automatic, Right]], 
          ImageScaled[{0, 0.5}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$15"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0.8170000000000001, 0.111}, 0.010254015000000002`], 
           RGBColor[0.5, 0, 0.5], StripOnInput -> False], "DynamicName", 
          BoxID -> "VertexID$16"], 
         InsetBox[
          FormBox["\"Khalfan\"", TraditionalForm], 
          Offset[{-2, 0}, 
           DynamicLocation["VertexID$16", Automatic, Left]], 
          ImageScaled[{1, 0.5}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$16"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0.7015, 0.016}, 0.010254015000000002`], 
           RGBColor[0.5, 0, 0.5], StripOnInput -> False], "DynamicName", 
          BoxID -> "VertexID$17"], 
         InsetBox[
          FormBox["\"Ghailani\"", TraditionalForm], 
          Offset[{2, 0}, 
           DynamicLocation["VertexID$17", Automatic, Right]], 
          ImageScaled[{0, 0.5}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$17"], 
       TagBox[{
         TagBox[
          StyleBox[
           
           DiskBox[{0.5760000000000001, 0.059000000000000004`}, 
            0.010254015000000002`], 
           RGBColor[0.5, 0, 0.5], StripOnInput -> False], "DynamicName", 
          BoxID -> "VertexID$18"], 
         InsetBox[
          FormBox["\"Awad\"", TraditionalForm], 
          Offset[{0, -2}, 
           DynamicLocation["VertexID$18", Automatic, Bottom]], 
          ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$18"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{6.1800000000000015`, 352.82}, {-124.32885935287574`, 
       119.74307837949719`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Medium]], "Output",
 CellChangeTimes->{3.7289099200578012`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"FullName\"\>", ",", "\<\"Group\"\>", ",", "VertexCoordinates", 
   ",", "VertexLabels", ",", "VertexShape", ",", "VertexShapeFunction", ",", 
   "VertexSize", ",", "VertexStyle"}], "}"}]], "Output",
 CellChangeTimes->{3.728909920095635*^9}]
}, Open  ]],

Cell["\<\

Try changing one of the \[OpenCurlyDoubleQuote]Name\[CloseCurlyDoubleQuote]s\
\>", "Text",
 CellChangeTimes->{{3.728900286686783*^9, 3.728900298647871*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"IGVertexProp", "[", "\"\<FullName\>\"", "]"}], "[", "b", "]"}], 
  "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PropertyValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", "\"\<Osama\>\""}], "}"}], ",", " ", 
    "\"\<FullName\>\""}], "]"}], " ", "=", " ", 
  "\"\<Hayk Khachatryan\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IGVertexProp", "[", "\"\<FullName\>\"", "]"}], "[", "b", "]"}], 
  "[", 
  RowBox[{"[", "1", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.728899230670574*^9, 3.728899243130926*^9}, {
   3.728899310959148*^9, 3.728899311372999*^9}, {3.728899448599372*^9, 
   3.728899494163692*^9}, 3.728899845120875*^9, {3.7288998918241453`*^9, 
   3.728900035990551*^9}, {3.7289001555316763`*^9, 3.7289001752141037`*^9}, {
   3.728900260432355*^9, 3.728900273001463*^9}, {3.72890992394925*^9, 
   3.728909949994885*^9}}],

Cell[BoxData["\<\"Osama Bin Laden\"\>"], "Output",
 CellChangeTimes->{{3.728909932727604*^9, 3.728909950277463*^9}}],

Cell[BoxData["\<\"Hayk Khachatryan\"\>"], "Output",
 CellChangeTimes->{{3.728909932727604*^9, 3.7289099502915487`*^9}}],

Cell[BoxData["\<\"Hayk Khachatryan\"\>"], "Output",
 CellChangeTimes->{{3.728909932727604*^9, 3.728909950303924*^9}}]
}, Open  ]],

Cell["\<\

Try creating a new property\
\>", "Text",
 CellChangeTimes->{{3.728900301998062*^9, 3.728900305557847*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"IGVertexProp", "[", "\"\<State\>\"", "]"}], "[", "b", "]"}], "[", 
  
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PropertyValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", "\"\<Osama\>\""}], "}"}], ",", " ", "\"\<State\>\""}], 
   "]"}], " ", "=", " ", "\"\<0\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IGVertexProp", "[", "\"\<State\>\"", "]"}], "[", "b", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PropertyValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b", ",", "\"\<Osama\>\""}], "}"}], ",", " ", "\"\<State\>\""}], 
   "]"}], " ", "=", " ", "\"\<1\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IGVertexProp", "[", "\"\<State\>\"", "]"}], "[", "b", "]"}], "[", 
  
  RowBox[{"[", "1", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.728900307897212*^9, 3.728900338531289*^9}, {
  3.728909960240019*^9, 3.728909966996916*^9}}],

Cell[BoxData[
 RowBox[{"Missing", "[", "\<\"Nonexistent\"\>", "]"}]], "Output",
 CellChangeTimes->{{3.728909952317237*^9, 3.728909967254033*^9}}],

Cell[BoxData["\<\"0\"\>"], "Output",
 CellChangeTimes->{{3.728909952317237*^9, 3.728909967268214*^9}}],

Cell[BoxData["\<\"0\"\>"], "Output",
 CellChangeTimes->{{3.728909952317237*^9, 3.728909967279941*^9}}],

Cell[BoxData["\<\"1\"\>"], "Output",
 CellChangeTimes->{{3.728909952317237*^9, 3.7289099672922583`*^9}}],

Cell[BoxData["\<\"1\"\>"], "Output",
 CellChangeTimes->{{3.728909952317237*^9, 3.728909967304214*^9}}]
}, Open  ]],

Cell["\<\

Success!
Now implement into grapher

(setVertexPlot from \
https://mathematica.stackexchange.com/questions/143601/get-or-set-vertex-\
properties-for-all-graph-vertices-at-once )\
\>", "Text",
 CellChangeTimes->{{3.7289003476400137`*^9, 3.728900354349728*^9}, {
  3.728919738601879*^9, 3.728919744316791*^9}, {3.728924216424926*^9, 
  3.728924221058082*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "grapher", ",", " ", "randomizeState", ",", " ", "latticer", ",", " ", 
    "setVertexProp"}], "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"randomizeState", "[", "a_", "]"}], " ", ":=", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"a", " ", "=", " ", 
    RowBox[{"ToString", "[", 
     RowBox[{"RandomInteger", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"latticer", "[", 
    RowBox[{"n_", ",", " ", "r_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Created", " ", "a", " ", "1", "D", " ", "periodic", " ", "lattice", " ", 
     "with", " ", "radius", " ", "r"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"IGMakeLattice", "[", 
    RowBox[{
     RowBox[{"{", "n", "}"}], ",", 
     RowBox[{"Radius", " ", "\[Rule]", "r"}], ",", 
     RowBox[{"Periodic", "\[Rule]", "True"}]}], "]"}]}], 
  "\[IndentingNewLine]", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"setVertexProp", "[", 
    RowBox[{"g_", ",", "prop_", ",", "vals_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{
     "Sets", " ", "the", " ", "property", " ", "prop", " ", "of", " ", "the", 
      " ", "vertices", " ", "in", " ", "g", " ", "to", " ", "vals"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", "input", ";", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"g", ":", " ", "graph"}], ";", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"prop", ":", " ", 
      RowBox[{"property", " ", "of", " ", "vertex"}]}], ";", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"vals", ":", " ", 
      RowBox[{"a", " ", "list", " ", "of", " ", "values"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", "output", ";", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"a", " ", "graph"}]}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"h", "=", "g"}], ",", 
       RowBox[{"vl", "=", 
        RowBox[{"VertexList", "@", "g"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"PropertyValue", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{"h", ",", "\[IndentingNewLine]", 
             RowBox[{"vl", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
           ",", "\[IndentingNewLine]", "prop"}], "\[IndentingNewLine]", "]"}],
          "=", 
         RowBox[{"vals", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "vl"}]}], "}"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "@", "h"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"grapher", "[", 
    RowBox[{"n_", ",", " ", "k_", ",", " ", "e_"}], "]"}], " ", ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{
     "Creates", " ", "a", " ", "graph", " ", "of", " ", "n", " ", "members", 
      " ", "with", " ", "random", " ", "states", " ", 
      RowBox[{"(", 
       RowBox[{"0", "/", "1"}], ")"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{
     "linked", " ", "to", " ", "their", " ", "k", " ", "nearest", " ", 
      "neighbors"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{
     "The", " ", "links", " ", "are", " ", "then", " ", "each", " ", 
      "rewired", " ", "with", " ", "probability", " ", "e"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", "input", ";", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"n", ":", " ", 
      RowBox[{"number", " ", "of", " ", "members"}]}], ";", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"k", ":", " ", 
      RowBox[{"degrees", " ", "of", " ", "vertex"}]}], ";", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"e", ":", " ", 
      RowBox[{"probablity", " ", "of", " ", "rewiring"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", "outputs", ";", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"a", " ", "graph"}]}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", " ", "states", ",", " ", "graph", ",", "g1"}], "}"}], 
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"r", " ", "=", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"radius", " ", "of", " ", "lattice"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Round", "[", 
        FractionBox["k", "2"], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"states", " ", "=", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "a", " ", "list", " ", "of", " ", "random", " ", "states", " ", 
          "between", " ", "0"}], " ", "\[UndirectedEdge]", " ", "1"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RandomInteger", "[", "1", "]"}], ",", " ", "n"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
       "graph", "=", "  ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"setVertexProp", "[", " ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "sets", " ", "the", " ", "\"\<State\>\"", "s", " ", "and", " ", 
           "VertexLabels", " ", 
           RowBox[{"to", " ", "'"}], 
           RowBox[{"states", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", " ", 
         RowBox[{
          RowBox[{"IGRewireEdges", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"latticer", "[", 
             RowBox[{"n", ",", "r"}], "]"}], ",", "e"}], "]"}], ",", "  ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "creates", " ", "a", " ", "graph", " ", "of", " ", "n", " ", 
            "members", " ", "with", " ", "radius", " ", "r"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"\"\<State\>\"", ",", " ", "VertexLabels"}], "}"}], ",", 
          " ", "\[IndentingNewLine]", "states"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "]"}]}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
      "graph", "=", "  ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"setVertexProp", "[", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "sets", " ", "the", " ", "\"\<State\>\"", "s", " ", "and", " ", 
          "VertexLabels", " ", 
          RowBox[{"to", " ", "'"}], 
          RowBox[{"states", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"IGRewireEdges", "[", " ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "rewires", " ", "the", " ", "graph", " ", "with", " ", 
            "probability", " ", "e"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"latticer", "[", 
            RowBox[{"n", ",", "r"}], "]"}], ",", 
           RowBox[{"(*", " ", 
            RowBox[{
            "creates", " ", "a", " ", "graph", " ", "of", " ", "n", " ", 
             "members", " ", "with", " ", "radius", " ", "r"}], " ", "*)"}], 
           "\[IndentingNewLine]", "e"}], "\[IndentingNewLine]", "]"}], ",", 
         "  ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"\"\<State\>\"", ",", " ", "VertexLabels"}], "}"}], ",", 
         " ", "\[IndentingNewLine]", "states"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"grapher", "[", 
     RowBox[{"9", ",", "4", ",", "0.3"}], "]"}], ",", " ", "10"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"g", " ", "=", " ", 
  RowBox[{"grapher", "[", 
   RowBox[{"25", ",", "8", ",", "0.3"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.728900379172682*^9, 3.7289003960934057`*^9}, {
   3.728900437252583*^9, 3.7289005231622562`*^9}, {3.7289006581438704`*^9, 
   3.728900697792098*^9}, 3.728900748327297*^9, {3.7289100425621147`*^9, 
   3.72891004759772*^9}, {3.7289106287525253`*^9, 3.728910687272287*^9}, {
   3.7289107315408077`*^9, 3.7289107591247463`*^9}, {3.728910815541497*^9, 
   3.72891084408694*^9}, {3.7289111794905977`*^9, 3.728911389558735*^9}, {
   3.7289114751091423`*^9, 3.728911477135276*^9}, {3.728911513686246*^9, 
   3.728911557700994*^9}, {3.728911604575873*^9, 3.7289117509948072`*^9}, {
   3.7289117871654882`*^9, 3.7289118516075172`*^9}, {3.728912029333556*^9, 
   3.7289121636628647`*^9}, {3.7289122010165462`*^9, 3.728912219167356*^9}, {
   3.72891236202386*^9, 3.7289123909855967`*^9}, {3.7289124691335793`*^9, 
   3.7289125373665237`*^9}, {3.728912568515688*^9, 3.728912589164803*^9}, {
   3.728912633382868*^9, 3.728912669784113*^9}, {3.728912747348637*^9, 
   3.7289127800749903`*^9}, {3.728912829938849*^9, 3.7289128681053343`*^9}, {
   3.7289129355781803`*^9, 3.7289129500978622`*^9}, {3.728912990698058*^9, 
   3.7289130476303*^9}, {3.7289150390454683`*^9, 3.728915084866444*^9}, {
   3.728915126879326*^9, 3.728915197616067*^9}, {3.728915233108694*^9, 
   3.7289154406586533`*^9}, {3.7289154928883247`*^9, 
   3.7289155191818943`*^9}, {3.728915562379846*^9, 3.7289156732783823`*^9}, {
   3.728915738420732*^9, 3.728915895065736*^9}, {3.7289160416211853`*^9, 
   3.728916164372802*^9}, {3.72891622249514*^9, 3.72891624636576*^9}, 
   3.728916285098699*^9, {3.728916316338051*^9, 3.728916393064138*^9}, {
   3.7289164875911713`*^9, 3.728916580736971*^9}, {3.728916662283269*^9, 
   3.728916762201791*^9}, {3.728916804672134*^9, 3.7289168246357117`*^9}, {
   3.7289169139217033`*^9, 3.728916934272045*^9}, 3.728916975913966*^9, {
   3.728917016604322*^9, 3.7289171762193937`*^9}, {3.72891724776402*^9, 
   3.728917248963953*^9}, {3.72891741321572*^9, 3.728917456190346*^9}, {
   3.728918906762792*^9, 3.728918997590847*^9}, {3.728919045500543*^9, 
   3.728919065836657*^9}, {3.7289191914911013`*^9, 3.7289192213576813`*^9}, 
   3.728919308831908*^9, {3.7289193419870453`*^9, 3.728919386361328*^9}, {
   3.728919461691227*^9, 3.728919468577241*^9}, {3.728919553470039*^9, 
   3.728919596901928*^9}, {3.728919644532205*^9, 3.728919646773169*^9}, {
   3.72891977748376*^9, 3.728919837923786*^9}, {3.728919869503964*^9, 
   3.728919895736514*^9}, {3.728919998450718*^9, 3.7289200152100897`*^9}, {
   3.728920063286339*^9, 3.728920073247115*^9}, {3.728920111135364*^9, 
   3.728920133502624*^9}, {3.728920207664823*^9, 3.7289202776835003`*^9}, {
   3.728920320793207*^9, 3.7289204725680733`*^9}, {3.728920503532955*^9, 
   3.728920538951593*^9}, {3.728920653946754*^9, 3.7289207071433353`*^9}, {
   3.728920755968251*^9, 3.728920922227005*^9}, {3.728920955028165*^9, 
   3.7289209647578993`*^9}, {3.728921045156438*^9, 3.72892106057969*^9}, {
   3.728921150534844*^9, 3.728921152379613*^9}, {3.728921241365999*^9, 
   3.728921304103259*^9}, {3.7289213645483828`*^9, 3.7289213767629843`*^9}, 
   3.728921415066032*^9, {3.728921848181615*^9, 3.728921852043956*^9}, {
   3.728921913392949*^9, 3.728922029365629*^9}, {3.728922067621253*^9, 
   3.728922075426914*^9}, {3.728922130716447*^9, 3.728922229777635*^9}, {
   3.7289225823682137`*^9, 3.728922592155054*^9}, {3.728922668177349*^9, 
   3.728923220275185*^9}, {3.7289232505208797`*^9, 3.728923280599744*^9}, {
   3.728923333318169*^9, 3.728923538964918*^9}, {3.728923576811943*^9, 
   3.728923577180122*^9}, {3.7289236569801407`*^9, 3.72892366797917*^9}, {
   3.728923735891056*^9, 3.728923749828693*^9}, {3.728923787883151*^9, 
   3.728923844189275*^9}, {3.728923884218788*^9, 3.728923912319854*^9}, {
   3.7289240012496862`*^9, 3.728924144499083*^9}, {3.7289241812452593`*^9, 
   3.728924195435734*^9}, {3.728924229421434*^9, 3.728924245113533*^9}, {
   3.72892436981032*^9, 3.7289243704545794`*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25}, {
      Null, {{1, 2}, {12, 21}, {3, 4}, {4, 14}, {6, 13}, {1, 7}, {8, 18}, {13,
        19}, {9, 10}, {10, 11}, {11, 12}, {12, 13}, {13, 14}, {14, 15}, {13, 
       16}, {16, 17}, {17, 18}, {18, 19}, {12, 20}, {11, 20}, {21, 22}, {22, 
       23}, {23, 24}, {24, 25}, {1, 17}, {1, 3}, {9, 24}, {1, 4}, {1, 23}, {1,
        5}, {1, 22}, {11, 25}, {2, 18}, {2, 24}, {2, 5}, {17, 23}, {2, 9}, {
       14, 19}, {3, 25}, {3, 6}, {3, 21}, {3, 7}, {4, 23}, {4, 7}, {4, 25}, {
       4, 8}, {7, 16}, {1, 8}, {5, 9}, {8, 24}, {6, 9}, {10, 19}, {7, 9}, {7, 
       10}, {7, 11}, {4, 10}, {8, 22}, {8, 12}, {9, 11}, {9, 12}, {9, 13}, {
       10, 23}, {10, 13}, {10, 20}, {11, 13}, {3, 14}, {5, 14}, {12, 14}, {12,
        15}, {12, 16}, {13, 21}, {9, 16}, {13, 17}, {14, 16}, {14, 17}, {14, 
       18}, {15, 25}, {15, 18}, {1, 19}, {16, 18}, {19, 22}, {16, 25}, {17, 
       22}, {17, 20}, {11, 17}, {18, 20}, {21, 25}, {6, 25}, {19, 21}, {9, 
       19}, {19, 23}, {12, 22}, {15, 23}, {20, 24}, {12, 24}, {21, 24}, {6, 
       11}, {22, 24}, {22, 25}, {9, 23}}}, {
      Properties -> {
        6 -> {"State" -> 1}, 23 -> {"State" -> 1}, 1 -> {"State" -> 1}, 
         2 -> {"State" -> 1}, 21 -> {"State" -> 1}, 18 -> {"State" -> 0}, 
         24 -> {"State" -> 1}, 12 -> {"State" -> 1}, 10 -> {"State" -> 0}, 
         5 -> {"State" -> 0}, 14 -> {"State" -> 1}, 8 -> {"State" -> 1}, 
         11 -> {"State" -> 1}, 3 -> {"State" -> 0}, 13 -> {"State" -> 0}, 
         19 -> {"State" -> 0}, 4 -> {"State" -> 1}, 17 -> {"State" -> 0}, 
         22 -> {"State" -> 1}, 9 -> {"State" -> 1}, 20 -> {"State" -> 1}, 
         7 -> {"State" -> 1}, 25 -> {"State" -> 1}, 15 -> {"State" -> 1}, 
         16 -> {"State" -> 0}}, 
       VertexLabels -> {
        23 -> 1, 19 -> 0, 9 -> 1, 22 -> 1, 17 -> 0, 14 -> 1, 5 -> 0, 6 -> 1, 
         24 -> 1, 13 -> 0, 16 -> 0, 4 -> 1, 15 -> 1, 12 -> 1, 21 -> 1, 20 -> 
         1, 1 -> 1, 7 -> 1, 8 -> 1, 18 -> 0, 2 -> 1, 10 -> 0, 3 -> 0, 11 -> 1,
          25 -> 1}}]], Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       LineBox[{{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}, {
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}, {
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}, {
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}, {
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}, {
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}, {
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}, {
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$19", Automatic, Center]}, {
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}, {
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}, {
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}, {
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}, {
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$18", Automatic, Center]}, {
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$24", Automatic, Center]}, {
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}, {
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}, {
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}, {
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}, {
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}, {
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$25", Automatic, Center]}, {
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}, {
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}, {
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}, {
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}, {
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}, {
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$25", Automatic, Center]}, {
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}, {
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}, {
          DynamicLocation["VertexID$6", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}, {
          DynamicLocation["VertexID$6", Automatic, Center], 
          DynamicLocation["VertexID$11", Automatic, Center]}, {
          DynamicLocation["VertexID$6", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}, {
          DynamicLocation["VertexID$6", Automatic, Center], 
          DynamicLocation["VertexID$25", Automatic, Center]}, {
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}, {
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}, {
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$11", Automatic, Center]}, {
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}, {
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$12", Automatic, Center]}, {
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$18", Automatic, Center]}, {
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}, {
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$24", Automatic, Center]}, {
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}, {
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$11", Automatic, Center]}, {
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$12", Automatic, Center]}, {
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}, {
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}, {
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$19", Automatic, Center]}, {
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}, {
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$24", Automatic, Center]}, {
          DynamicLocation["VertexID$10", Automatic, Center], 
          DynamicLocation["VertexID$11", Automatic, Center]}, {
          DynamicLocation["VertexID$10", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}, {
          DynamicLocation["VertexID$10", Automatic, Center], 
          DynamicLocation["VertexID$19", Automatic, Center]}, {
          DynamicLocation["VertexID$10", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}, {
          DynamicLocation["VertexID$10", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}, {
          DynamicLocation["VertexID$11", Automatic, Center], 
          DynamicLocation["VertexID$12", Automatic, Center]}, {
          DynamicLocation["VertexID$11", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}, {
          DynamicLocation["VertexID$11", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}, {
          DynamicLocation["VertexID$11", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}, {
          DynamicLocation["VertexID$11", Automatic, Center], 
          DynamicLocation["VertexID$25", Automatic, Center]}, {
          DynamicLocation["VertexID$12", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}, {
          DynamicLocation["VertexID$12", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}, {
          DynamicLocation["VertexID$12", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}, {
          DynamicLocation["VertexID$12", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}, {
          DynamicLocation["VertexID$12", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}, {
          DynamicLocation["VertexID$12", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}, {
          DynamicLocation["VertexID$12", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}, {
          DynamicLocation["VertexID$12", Automatic, Center], 
          DynamicLocation["VertexID$24", Automatic, Center]}, {
          DynamicLocation["VertexID$13", Automatic, Center], 
          DynamicLocation["VertexID$14", Automatic, Center]}, {
          DynamicLocation["VertexID$13", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}, {
          DynamicLocation["VertexID$13", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}, {
          DynamicLocation["VertexID$13", Automatic, Center], 
          DynamicLocation["VertexID$19", Automatic, Center]}, {
          DynamicLocation["VertexID$13", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}, {
          DynamicLocation["VertexID$14", Automatic, Center], 
          DynamicLocation["VertexID$15", Automatic, Center]}, {
          DynamicLocation["VertexID$14", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}, {
          DynamicLocation["VertexID$14", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}, {
          DynamicLocation["VertexID$14", Automatic, Center], 
          DynamicLocation["VertexID$18", Automatic, Center]}, {
          DynamicLocation["VertexID$14", Automatic, Center], 
          DynamicLocation["VertexID$19", Automatic, Center]}, {
          DynamicLocation["VertexID$15", Automatic, Center], 
          DynamicLocation["VertexID$18", Automatic, Center]}, {
          DynamicLocation["VertexID$15", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}, {
          DynamicLocation["VertexID$15", Automatic, Center], 
          DynamicLocation["VertexID$25", Automatic, Center]}, {
          DynamicLocation["VertexID$16", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}, {
          DynamicLocation["VertexID$16", Automatic, Center], 
          DynamicLocation["VertexID$18", Automatic, Center]}, {
          DynamicLocation["VertexID$16", Automatic, Center], 
          DynamicLocation["VertexID$25", Automatic, Center]}, {
          DynamicLocation["VertexID$17", Automatic, Center], 
          DynamicLocation["VertexID$18", Automatic, Center]}, {
          DynamicLocation["VertexID$17", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}, {
          DynamicLocation["VertexID$17", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}, {
          DynamicLocation["VertexID$17", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}, {
          DynamicLocation["VertexID$18", Automatic, Center], 
          DynamicLocation["VertexID$19", Automatic, Center]}, {
          DynamicLocation["VertexID$18", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}, {
          DynamicLocation["VertexID$19", Automatic, Center], 
          DynamicLocation["VertexID$21", Automatic, Center]}, {
          DynamicLocation["VertexID$19", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}, {
          DynamicLocation["VertexID$19", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}, {
          DynamicLocation["VertexID$20", Automatic, Center], 
          DynamicLocation["VertexID$24", Automatic, Center]}, {
          DynamicLocation["VertexID$21", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}, {
          DynamicLocation["VertexID$21", Automatic, Center], 
          DynamicLocation["VertexID$24", Automatic, Center]}, {
          DynamicLocation["VertexID$21", Automatic, Center], 
          DynamicLocation["VertexID$25", Automatic, Center]}, {
          DynamicLocation["VertexID$22", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}, {
          DynamicLocation["VertexID$22", Automatic, Center], 
          DynamicLocation["VertexID$24", Automatic, Center]}, {
          DynamicLocation["VertexID$22", Automatic, Center], 
          DynamicLocation["VertexID$25", Automatic, Center]}, {
          DynamicLocation["VertexID$23", Automatic, Center], 
          DynamicLocation["VertexID$24", Automatic, Center]}, {
          DynamicLocation["VertexID$24", Automatic, Center], 
          DynamicLocation["VertexID$25", Automatic, Center]}}]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          
          DiskBox[{2.137427018328867, 1.9193840820023764`}, 
           0.029783642358156587`], "DynamicName", BoxID -> "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          
          DiskBox[{2.9366710756495653`, 1.6008069033052272`}, 
           0.029783642358156587`], "DynamicName", BoxID -> "VertexID$2"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          
          DiskBox[{0.7898662703274552, 1.8894944225768748`}, 
           0.029783642358156587`], "DynamicName", BoxID -> "VertexID$3"], 
         InsetBox[
          FormBox["0", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          
          DiskBox[{1.674491801578142, 2.1061395693873064`}, 
           0.029783642358156587`], "DynamicName", BoxID -> "VertexID$4"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          
          DiskBox[{2.6589361308603014`, 2.5007032055010487`}, 
           0.029783642358156587`], "DynamicName", BoxID -> "VertexID$5"], 
         InsetBox[
          FormBox["0", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          DiskBox[{0., 1.5839085290187631`}, 0.029783642358156587`], 
          "DynamicName", BoxID -> "VertexID$6"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          
          DiskBox[{0.9255743248795668, 2.316177425877626}, 
           0.029783642358156587`], "DynamicName", BoxID -> "VertexID$7"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$7", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          
          DiskBox[{2.7569037366015285`, 1.0476958772931475`}, 
           0.029783642358156587`], "DynamicName", BoxID -> "VertexID$8"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$8", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          
          DiskBox[{1.4612079083526508`, 1.6625454089565967`}, 
           0.029783642358156587`], "DynamicName", BoxID -> "VertexID$9"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$9", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          
          DiskBox[{0.9268924420445248, 1.5171994082707525`}, 
           0.029783642358156587`], "DynamicName", BoxID -> "VertexID$10"], 
         InsetBox[
          FormBox["0", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$10", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          
          DiskBox[{0.4242079713620812, 0.9860919134775609}, 
           0.029783642358156587`], "DynamicName", BoxID -> "VertexID$11"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$11", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          
          DiskBox[{1.4948493734688642`, 0.44567998863602876`}, 
           0.029783642358156587`], "DynamicName", BoxID -> "VertexID$12"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$12", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          
          DiskBox[{0.7273161010926897, 1.0993042009684884`}, 
           0.029783642358156587`], "DynamicName", BoxID -> "VertexID$13"], 
         InsetBox[
          FormBox["0", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$13", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          
          DiskBox[{1.8996448920291011`, 1.4462947563723116`}, 
           0.029783642358156587`], "DynamicName", BoxID -> "VertexID$14"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$14", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$14"], 
       TagBox[{
         TagBox[
          
          DiskBox[{2.2423587574136707`, 0.04610577065359145}, 
           0.029783642358156587`], "DynamicName", BoxID -> "VertexID$15"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$15", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$15"], 
       TagBox[{
         TagBox[
          
          DiskBox[{1.265053137128796, 1.2451640490303078`}, 
           0.029783642358156587`], "DynamicName", BoxID -> "VertexID$16"], 
         InsetBox[
          FormBox["0", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$16", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$16"], 
       TagBox[{
         TagBox[
          
          DiskBox[{1.5462163079125606`, 0.8057958699730033}, 
           0.029783642358156587`], "DynamicName", BoxID -> "VertexID$17"], 
         InsetBox[
          FormBox["0", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$17", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$17"], 
       TagBox[{
         TagBox[
          
          DiskBox[{2.462643583792726, 0.5696365415220784}, 
           0.029783642358156587`], "DynamicName", BoxID -> "VertexID$18"], 
         InsetBox[
          FormBox["0", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$18", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$18"], 
       TagBox[{
         TagBox[
          
          DiskBox[{1.6901284769559723`, 1.1527946751840117`}, 
           0.029783642358156587`], "DynamicName", BoxID -> "VertexID$19"], 
         InsetBox[
          FormBox["0", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$19", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$19"], 
       TagBox[{
         TagBox[
          DiskBox[{1.192002099247785, 0.}, 0.029783642358156587`], 
          "DynamicName", BoxID -> "VertexID$20"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$20", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$20"], 
       TagBox[{
         TagBox[
          
          DiskBox[{0.8763849861748398, 0.4023695210649969}, 
           0.029783642358156587`], "DynamicName", BoxID -> "VertexID$21"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$21", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$21"], 
       TagBox[{
         TagBox[
          
          DiskBox[{2.0779978594720876`, 0.7504865850478033}, 
           0.029783642358156587`], "DynamicName", BoxID -> "VertexID$22"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$22", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$22"], 
       TagBox[{
         TagBox[
          
          DiskBox[{2.2446602785447167`, 1.2978012786859352`}, 
           0.029783642358156587`], "DynamicName", BoxID -> "VertexID$23"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$23", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$23"], 
       TagBox[{
         TagBox[
          
          DiskBox[{2.0113116458832305`, 0.44764247946672453`}, 
           0.029783642358156587`], "DynamicName", BoxID -> "VertexID$24"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$24", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$24"], 
       TagBox[{
         TagBox[
          
          DiskBox[{1.0283536855246886`, 0.8423411443314914}, 
           0.029783642358156587`], "DynamicName", BoxID -> "VertexID$25"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$25", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$25"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{6.1800000000000015`, 
       360.52370135153325`}, {-165.8109013515333, 145.3859329297723}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.728924126065545*^9, 3.728924127959144*^9}, {
   3.728924183814893*^9, 3.728924196142899*^9}, {3.728924233692093*^9, 
   3.728924245583064*^9}, 3.728924371477693*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IGVertexProp", "[", "\"\<State\>\"", "]"}], "[", "g", 
  "]"}]], "Input",
 CellChangeTimes->{{3.728924376847308*^9, 3.728924386703652*^9}, {
  3.7289246334050083`*^9, 3.7289247146060543`*^9}, {3.728924751049777*^9, 
  3.7289247757984343`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.728924639456691*^9, 3.728924704995113*^9, 
  3.728924776217525*^9}]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.7289242792662783`*^9, 3.728924295603812*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{777, 751},
WindowMargins->{{Automatic, 2}, {Automatic, 0}},
PrintingPageRange->{Automatic, Automatic},
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 11, \
2016)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 401, 8, 251, "Chapter"],
Cell[CellGroupData[{
Cell[1006, 34, 157, 3, 66, "Section"],
Cell[CellGroupData[{
Cell[1188, 41, 120, 2, 37, "Input"],
Cell[CellGroupData[{
Cell[1333, 47, 112, 1, 22, "Print"],
Cell[1448, 50, 118, 1, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[1593, 55, 3910, 84, 531, "Input"],
Cell[5506, 141, 603, 15, 75, "Input"],
Cell[6112, 158, 223, 5, 37, "Input"],
Cell[6338, 165, 455, 10, 37, "Input"],
Cell[CellGroupData[{
Cell[6818, 179, 189, 3, 32, "Subsection"],
Cell[7010, 184, 3262, 71, 548, "Input"],
Cell[CellGroupData[{
Cell[10297, 259, 509, 10, 87, "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[10809, 271, 647, 15, 37, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[11493, 291, 418, 9, 68, "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[11914, 302, 1795, 43, 89, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[13724, 348, 237, 4, 30, "Text"],
Cell[13964, 354, 1051, 30, 157, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15064, 390, 159, 3, 66, "Section"],
Cell[CellGroupData[{
Cell[15248, 397, 300, 6, 30, "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[15551, 405, 3381, 73, 548, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[18969, 483, 362, 8, 68, "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[19334, 493, 2320, 53, 293, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[21691, 551, 310, 7, 49, "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[22004, 560, 2327, 56, 293, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24380, 622, 159, 3, 66, "Section"],
Cell[CellGroupData[{
Cell[24564, 629, 360, 6, 30, "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[24927, 637, 2647, 61, 293, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[27589, 701, 358, 8, 49, "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[27950, 711, 6092, 136, 752, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34079, 852, 157, 3, 66, "Section"],
Cell[34239, 857, 227, 6, 49, "Text"],
Cell[34469, 865, 5337, 115, 684, "Input"],
Cell[39809, 982, 2567, 63, 361, "Input"],
Cell[42379, 1047, 841, 22, 72, "Input"],
Cell[43223, 1071, 456, 12, 37, "Input"],
Cell[43682, 1085, 480, 11, 87, "Text"],
Cell[44165, 1098, 5169, 113, 684, "Input"],
Cell[49337, 1213, 312, 8, 49, "Text"],
Cell[49652, 1223, 1836, 46, 259, "Input"],
Cell[51491, 1271, 189, 6, 49, "Text"],
Cell[51683, 1279, 2227, 46, 344, "Input"],
Cell[53913, 1327, 202, 6, 49, "Text"],
Cell[54118, 1335, 151, 3, 37, "Input"],
Cell[54272, 1340, 340, 7, 37, "Input"],
Cell[54615, 1349, 263, 6, 37, "Input"],
Cell[54881, 1357, 472, 13, 55, "Input"],
Cell[55356, 1372, 452, 13, 37, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55845, 1390, 97, 1, 66, "Section"],
Cell[55945, 1393, 242, 5, 49, "Text"],
Cell[56190, 1400, 120, 2, 37, "Input"],
Cell[56313, 1404, 573, 15, 72, "Input"],
Cell[56889, 1421, 122, 2, 37, "Input"],
Cell[57014, 1425, 119, 4, 49, "Text"],
Cell[57136, 1431, 927, 17, 55, "Input"],
Cell[58066, 1450, 141, 4, 49, "Text"],
Cell[58210, 1456, 2649, 60, 387, "Input"],
Cell[60862, 1518, 138, 1, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61037, 1524, 97, 1, 66, "Section"],
Cell[61137, 1527, 191, 4, 30, "Text"],
Cell[61331, 1533, 151, 2, 37, "Input"],
Cell[61485, 1537, 235, 5, 68, "Text"],
Cell[CellGroupData[{
Cell[61745, 1546, 800, 17, 72, "Input"],
Cell[62548, 1565, 29311, 639, 276, "Output"],
Cell[91862, 2206, 284, 5, 55, "Output"]
}, Open  ]],
Cell[92161, 2214, 167, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[92353, 2222, 956, 23, 72, "Input"],
Cell[93312, 2247, 116, 1, 37, "Output"],
Cell[93431, 2250, 119, 1, 37, "Output"],
Cell[93553, 2253, 117, 1, 37, "Output"]
}, Open  ]],
Cell[93685, 2257, 118, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[93828, 2265, 1070, 30, 123, "Input"],
Cell[94901, 2297, 145, 2, 37, "Output"],
Cell[95049, 2301, 102, 1, 37, "Output"],
Cell[95154, 2304, 102, 1, 37, "Output"],
Cell[95259, 2307, 104, 1, 37, "Output"],
Cell[95366, 2310, 102, 1, 37, "Output"]
}, Open  ]],
Cell[95483, 2314, 368, 11, 125, "Text"],
Cell[CellGroupData[{
Cell[95876, 2329, 12603, 256, 1611, "Input"],
Cell[108482, 2587, 27142, 534, 333, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135661, 3126, 278, 6, 37, "Input"],
Cell[135942, 3134, 407, 8, 71, "Output"]
}, Open  ]],
Cell[136364, 3145, 84, 1, 30, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

